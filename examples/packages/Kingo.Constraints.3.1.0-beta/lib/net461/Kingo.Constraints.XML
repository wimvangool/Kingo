<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kingo.Constraints</name>
    </assembly>
    <members>
        <member name="T:Kingo.Messaging.Validation.BasicConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.Apply``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},Kingo.Messaging.Validation.IConstraint{``1})">
            <summary>
            Applies the specified <paramref name="constraint"/>.
            </summary>
            <param name="member">The member to apply the constraint to.</param>
            <param name="constraint">The constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraint"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.Apply``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,Kingo.Messaging.Validation.IConstraint{``1}})">
            <summary>
            Applies the constraint that is created by the specified <paramref name="constraintFactory"/>.
            </summary>
            <param name="member">The member to apply the constraint to.</param>
            <param name="constraintFactory">A delegate used to create the constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraintFactory"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="constraintFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.Apply``3(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},Kingo.Messaging.Validation.IFilter{``1,``2})">
            <summary>
            Applies the specified <paramref name="constraint"/>.
            </summary>
            <param name="member">The member to apply the constraint to.</param>
            <param name="constraint">The constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraint"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.Apply``3(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,Kingo.Messaging.Validation.IFilter{``1,``2}})">
            <summary>
            Applies the constraint that is created by the specified <paramref name="constraintFactory"/>.
            </summary>
            <param name="member">The member to apply the constraint to.</param>
            <param name="constraintFactory">A delegate used to create the constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraintFactory"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="constraintFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Object,System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>     
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.IEquatable{``1},System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception> 
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>           
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.Object},System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>     
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.IEquatable{``1}},System.String)">
            <summary>
            Verifies that the member's value is not equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception> 
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>           
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Object,System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.IEquatable{``1},System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns>     
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>    
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.Object},System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.IEquatable{``1}},System.String)">
            <summary>
            Verifies that the member's value is equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns>     
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>    
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies that the member is greater than <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member is greater than <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.IComparable{``1},System.String)">
            <summary>
            Verifies that the member is greater than <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A member that has been merged with the specified member.</returns>   
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member is greater than <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member is greater than <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.IComparable{``1}},System.String)">
            <summary>
            Verifies that the member is greater than <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A member that has been merged with the specified member.</returns>   
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies that the member is greater than or equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>        
            <exception cref="T:System.ArgumentException">
            <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member is greater than or equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>        
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.IComparable{``1},System.String)">
            <summary>
            Verifies that the member is equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>     
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>        
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member is greater than or equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>        
            <exception cref="T:System.ArgumentException">
            <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member is greater than or equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>        
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsGreaterThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.IComparable{``1}},System.String)">
            <summary>
            Verifies that the member is equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>     
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>        
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>           
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range        
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>
            <param name="options">
            The options that define whether or not <paramref name="left"/> and/or <paramref name="right"/> are part of the range themselves.
            </param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>             
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range        
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,System.Collections.Generic.IComparer{``1},Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="options">
            The options that define whether or not <paramref name="left"/> and/or <paramref name="right"/> are part of the range themselves.
            </param> 
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>              
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},Kingo.Messaging.Validation.IRange{``1},System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified <paramref name="range"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="range">A range of values.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentNullException">
            <paramref name="range"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>           
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>
            <param name="options">
            The options that define whether or not <paramref name="leftFactory"/> and/or <paramref name="rightFactory"/> are part of the range themselves.
            </param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>             
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="options">
            The options that define whether or not <paramref name="leftFactory"/> and/or <paramref name="rightFactory"/> are part of the range themselves.
            </param> 
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>              
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,Kingo.Messaging.Validation.IRange{``1}},System.String)">
            <summary>
            Verifies that the member's value does not lie within the specified <paramref name="rangeFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="rangeFactory">Delegate that returns a range of values.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="rangeFactory"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rangeFactory"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>           
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range        
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>
            <param name="options">
            The options that define whether or not <paramref name="left"/> and/or <paramref name="right"/> are part of the range themselves.
            </param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>             
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range        
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,``1,System.Collections.Generic.IComparer{``1},Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="left">The lower boundary of the range.</param>
            <param name="right">The upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="options">
            The options that define whether or not <paramref name="left"/> and/or <paramref name="right"/> are part of the range themselves.
            </param> 
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>              
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface
            - or -
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},Kingo.Messaging.Validation.IRange{``1},System.String)">
            <summary>
            Verifies that the member's value lies within the specified <paramref name="range"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="range">A range of values.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentNullException">
            <paramref name="range"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>           
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>
            <param name="options">
            The options that define whether or not <paramref name="leftFactory"/> and/or <paramref name="rightFactory"/> are part of the range themselves.
            </param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>             
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},Kingo.Messaging.Validation.RangeOptions,System.String)">
            <summary>
            Verifies that the member's value lies within the specified range.
            </summary>
            <param name="member">A member.</param> 
            <param name="leftFactory">Delegate that returns the lower boundary of the range.</param>
            <param name="rightFactory">Delegate that returns the upper boundary of the range.</param>        
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="options">
            The options that define whether or not <paramref name="leftFactory"/> and/or <paramref name="rightFactory"/> are part of the range themselves.
            </param> 
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/>, <paramref name="leftFactory"/> or <paramref name="rightFactory"/> is <c>null</c>.
            </exception>              
            <exception cref="T:System.ArgumentException">             
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInRange``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,Kingo.Messaging.Validation.IRange{``1}},System.String)">
            <summary>
            Verifies that the member's value lies within the specified <paramref name="rangeFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="rangeFactory">Delegate that returns a range of values.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param> 
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="rangeFactory"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rangeFactory"/> is <c>null</c>.
            </exception>      
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInstanceOf``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Type,System.String)">
            <summary>
            Verifies that this member's value is not an instance of <paramref name="type"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="type">The type to compare this member's type to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="type"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotInstanceOf``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.Type},System.String)">
            <summary>
            Verifies that this member's value is not an instance of <paramref name="typeFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="typeFactory">Delegate that returns the type to compare this member's type to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="typeFactory"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.NewIsNotInstanceOfConstraint``1(System.Type,System.String)">
            <summary>
            Creates and returns a constraint that checks whether or not a certain value is of the specified <paramref name="type"/>.
            </summary>
            <typeparam name="TValue">Type of the value to check.</typeparam>
            <param name="type">Type that the value is compared to.</param>
            <param name="errorMessage">Error message of the constraint.</param>
            <returns>A new constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="type"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInstanceOf``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Type,System.String)">
            <summary>
            Verifies that the member's value is an instance of <paramref name="type"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="type">The type to compare the member's type to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="type"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsInstanceOf``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.Type},System.String)">
            <summary>
            Verifies that the member's value is an instance of <paramref name="typeFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="typeFactory">Delegate that returns the type to compare the member's type to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>This member.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="typeFactory"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.NewIsInstanceOfConstraint``1(System.Type,System.String)">
            <summary>
            Creates and returns a constraint that checks whether or not a certain value is of the specified <paramref name="type"/>.
            </summary>
            <typeparam name="TValue">Type of the value to check.</typeparam>
            <param name="type">Type that the value is compared to or cast to.</param>
            <param name="errorMessage">Error message of the constraint.</param>
            <returns>A new constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="type"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotNull``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.String)">
            <summary>
            Verifies whether or not the member's value is not <c>null</c>.
            </summary>     
            <param name="member">A member.</param>   
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>A member that has been merged with the specified member.</returns>       
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception> 
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNull``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.String)">
            <summary>
            Verifies whether or not the member's value is <c>null</c>.
            </summary> 
            <param name="member">A member.</param> 
            <param name="errorMessage">Error message to return when the member fails.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>        
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotSameInstanceAs``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Object,System.String)">
            <summary>
            Verifies that the member's value does not refer to the same instance as <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's reference to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>       
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsNotSameInstanceAs``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.Object},System.String)">
            <summary>
            Verifies that the member's value does not refer to the same instance as <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's reference to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>A member that has been merged with the specified member.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>       
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSameInstanceAs``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Object,System.String)">
            <summary>
            Verifies that the member's value refers to the same instance as <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's reference to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>A member that has been merged with the specified member.</returns>     
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>   
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSameInstanceAs``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.Object},System.String)">
            <summary>
            Verifies that the member's value refers to the same instance as <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's reference to.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>A member that has been merged with the specified member.</returns>     
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>   
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies that the member's value is smaller than <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.IComparable{``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>   
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>           
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThan``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.IComparable{``1}},System.String)">
            <summary>
            Verifies that the member's value is smaller than <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>  
            <returns>A member that has been merged with the specified member.</returns>   
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>           
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies that the member's value is smaller than or equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than or equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="other"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.IComparable{``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than or equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="other">The instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than or equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.String)">
            <summary>
            Verifies that the member's value is smaller than or equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>
            <param name="comparer">The comparer that is used to perform the comparison.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>    
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="comparer"/> is <c>null</c> and <paramref name="otherFactory"/> does not implement the
            <see cref="T:System.IComparable`1" /> or <see cref="T:System.IComparable"/> interfaces
            - or -        
            <paramref name="errorMessage"/> is not in a correct format.        
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BasicConstraints.IsSmallerThanOrEqualTo``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.Func{``0,System.IComparable{``1}},System.String)">
            <summary>
            Verifies that the member's value is smaller than or equal to <paramref name="otherFactory"/>.
            </summary>
            <param name="member">A member.</param> 
            <param name="otherFactory">Delegate that returns the instance to compare the member's value to.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>        
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="otherFactory"/> is <c>null</c>.
            </exception>    
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>  
        </member>
        <member name="T:Kingo.Messaging.Validation.IsNotEqualToConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is equal to another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.Other">
            <summary>
            The instance that the value is compared to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotEqualToConstraint`1" /> class.
            </summary>
            <param name="other">Instance to compare the value to.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.#ctor(`0,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotEqualToConstraint`1" /> class.
            </summary>
            <param name="other">Instance to compare the value to.</param>
            <param name="comparer">Optional comparer to use when comparing the two instances.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.#ctor(System.IEquatable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotEqualToConstraint`1" /> class.
            </summary>
            <param name="other">Instance to compare the value to.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotEqualToConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsEqualToConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is equal to another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsEqualToConstraint`1.Other">
            <summary>
            The instance that the value is compared to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsEqualToConstraint`1" /> class.
            </summary>
            <param name="other">Instance to compare the value to.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.#ctor(`0,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsEqualToConstraint`1" /> class.
            </summary>
            <param name="other">Instance to compare the value to.</param>
            <param name="comparer">Optional comparer to use when comparing the two instances.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.#ctor(System.IEquatable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsEqualToConstraint`1" /> class.
            </summary>
            <param name="other">Instance to compare the value to.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsEqualToConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsEqualToConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsGreaterThanConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is greater than another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.Other">
            <summary>
            Instance to compare the value to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.#ctor(`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsGreaterThanConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>
            <param name="comparer">Optional comparer to use when comparing the two instances.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.#ctor(System.IComparable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsGreaterThanConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is greater than or equal to another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.Other">
            <summary>
            Instance to compare the value to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.#ctor(`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>
            <param name="comparer">Optional comparer to use when comparing the two instances.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.#ctor(System.IComparable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsGreaterThanOrEqualToConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsNotInRangeConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is within a certain range of values.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.Range">
            <summary>
            The range that the value is checked to be a part of.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.#ctor(`0,`0,Kingo.Messaging.Validation.RangeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotInRangeConstraint`1" /> class.
            </summary>
            <param name="left">The lower boundary of this range.</param>
            <param name="right">The upper boundary of this range.</param>        
            <param name="options">
            The options indicating whether or <paramref name="left"/> and/or <paramref name="right"/> are part of this range themselves.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.#ctor(`0,`0,System.Collections.Generic.IComparer{`0},Kingo.Messaging.Validation.RangeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotInRangeConstraint`1" /> class.
            </summary>
            <param name="left">The lower boundary of this range.</param>
            <param name="right">The upper boundary of this range.</param>
            <param name="comparer">Optional comparer to use when comparing two instances.</param>
            <param name="options">
            The options indicating whether or <paramref name="left"/> and/or <paramref name="right"/> are part of this range themselves.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.#ctor(Kingo.Messaging.Validation.IRange{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotInRangeConstraint`1" /> class.
            </summary>   
            <param name="range">The range that the value is checked to be a part of.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="range"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="P:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotInRangeConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsInRangeConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is within a certain range of values.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsInRangeConstraint`1.Range">
            <summary>
            The range that the value is checked to be a part of.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.#ctor(`0,`0,Kingo.Messaging.Validation.RangeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsInRangeConstraint`1" /> class.
            </summary>
            <param name="left">The lower boundary of this range.</param>
            <param name="right">The upper boundary of this range.</param>        
            <param name="options">
            The options indicating whether or <paramref name="left"/> and/or <paramref name="right"/> are part of this range themselves.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.#ctor(`0,`0,System.Collections.Generic.IComparer{`0},Kingo.Messaging.Validation.RangeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsInRangeConstraint`1" /> class.
            </summary>
            <param name="left">The lower boundary of this range.</param>
            <param name="right">The upper boundary of this range.</param>
            <param name="comparer">Optional comparer to use when comparing two instances.</param>
            <param name="options">
            The options indicating whether or <paramref name="left"/> and/or <paramref name="right"/> are part of this range themselves.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.#ctor(Kingo.Messaging.Validation.IRange{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsInRangeConstraint`1" /> class.
            </summary>   
            <param name="range">The range that the value is checked to be a part of.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="range"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="P:Kingo.Messaging.Validation.IsInRangeConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInRangeConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsInstanceOfFilter`2">
            <summary>
            Represents a filter that transforms a value into another type of value.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInstanceOfFilter`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsInstanceOfFilter`2" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.IsInstanceOfFilter`2.Type">
            <summary>
            Returns the type that the value is compared to or cast to.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsInstanceOfFilter`2.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInstanceOfFilter`2.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInstanceOfFilter`2.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInstanceOfFilter`2.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInstanceOfFilter`2.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsInstanceOfFilter`2.IsSatisfiedBy(`0,`1@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.AsFilter`2">
            <summary>
            Represents a filter that transforms a value into another type of value. This filter
            always succeeds, but outputs a <c>null</c> value if the conversion failed.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.AsFilter`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.AsFilter`2" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.AsFilter`2.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.AsFilter`2.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.AsFilter`2.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.AsFilter`2.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.AsFilter`2.IsSatisfiedBy(`0,`1@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsNotNullConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is  not <c>null</c>.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotNullConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotNullConstraint`1" /> class.
            </summary>        
        </member>
        <member name="P:Kingo.Messaging.Validation.IsNotNullConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotNullConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotNullConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotNullConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotNullConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsNullConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is <c>null</c>.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNullConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNullConstraint`1" /> class.
            </summary>       
        </member>
        <member name="P:Kingo.Messaging.Validation.IsNullConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNullConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNullConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNullConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNullConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value refers to the same instance as another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.Other">
            <summary>
            The instance to compare the value to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1" /> class.
            </summary>    
            <param name="other">The instance to compare the value to.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsNotSameInstanceAsConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value refers to the same instance as another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.Other">
            <summary>
            The instance to compare the value to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1" /> class.
            </summary>    
            <param name="other">The instance to compare the value to.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSameInstanceAsConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsSmallerThanConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is smaller than another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.Other">
            <summary>
            Instance to compare the value to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.#ctor(`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsSmallerThanConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>
            <param name="comparer">Optional comparer to use when comparing the two instances.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.#ctor(System.IComparable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsSmallerThanConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>        
        </member>
        <member name="P:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value is smaller than or equal to another value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.Other">
            <summary>
            Instance to compare the value to.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.#ctor(`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>
            <param name="comparer">Optional comparer to use when comparing the two instances.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.#ctor(System.IComparable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1" /> class.
            </summary>    
            <param name="other">Instance to compare the value to.</param>        
        </member>
        <member name="P:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IsSmallerThanOrEqualToConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.BooleanConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanConstraints.IsTrue``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.Boolean},System.String)">
            <summary>
            Verifies that the member's value is <c>true</c>.
            </summary>        
            <param name="member">A member.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanConstraints.IsFalse``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.Boolean},System.String)">
            <summary>
            Verifies that the member's value is <c>false</c>.
            </summary>        
            <param name="member">A member.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.BooleanIsTrueConstraint">
            <summary>
            Represents a constraint that checks whether or not a value is <c>false</c>.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsTrueConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.BooleanIsTrueConstraint" /> class.
            </summary>        
        </member>
        <member name="P:Kingo.Messaging.Validation.BooleanIsTrueConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsTrueConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsTrueConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsTrueConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsTrueConstraint.IsSatisfiedBy(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.BooleanIsFalseConstraint">
            <summary>
            Represents a constraint that checks whether or not a value is <c>false</c>.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsFalseConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.BooleanIsFalseConstraint" /> class.
            </summary>        
        </member>
        <member name="P:Kingo.Messaging.Validation.BooleanIsFalseConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsFalseConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsFalseConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsFalseConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.BooleanIsFalseConstraint.IsSatisfiedBy(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.CollectionConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionConstraints.IsNotNullOrEmpty``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.String)">
            <summary>
            Verifies that the specified collection has at least one element.
            </summary>       
            <param name="member">A member.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionConstraints.IsNullOrEmpty``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.String)">
            <summary>
            Verifies that the specified collection is either <c>null</c> or empty.
            </summary>        
            <param name="member">A member.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionConstraints.Length``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1[]})">
            <summary>
            Returns the length of the specified array.
            </summary>   
            <param name="member">A member.</param>                     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>                  
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>        
        </member>
        <member name="T:Kingo.Messaging.Validation.HasItemFilter`1">
            <summary>
            Represents a filter that selects an item from a value using a set of indices.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.HasItemFilter`1.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{System.Type,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.HasItemFilter`1" /> class.
            </summary>    
            <exception cref="T:System.ArgumentNullException">
            <paramref name="indexList"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="P:Kingo.Messaging.Validation.HasItemFilter`1.IndexList">
            <summary>
            Indices of the element to select.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.HasItemFilter`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasItemFilter`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasItemFilter`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasItemFilter`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasItemFilter`1.IsSatisfiedBy(`0,System.Object@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a collection is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNotNullOrEmptyConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a collection is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.CollectionIsNullOrEmptyConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.Constraint">
            <summary>
            Provides a base implementation of the <see cref="T:Kingo.Messaging.Validation.IConstraintWithErrorMessage" /> interface.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.Constraint.Name">
            <inheritdoc />
        </member>
        <member name="P:Kingo.Messaging.Validation.Constraint.NameIfNotSpecified">
            <summary>
            Returns the name of this constraint if it was not explicitly specified.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.Constraint.ErrorMessage">
            <inheritdoc />
        </member>
        <member name="P:Kingo.Messaging.Validation.Constraint.ErrorMessageIfNotSpecified">
            <summary>
            Returns the error message of this constraint if it was not explicitly specified.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.Constraint.DefaultName">
            <summary>
            Represents the default name of a constraint when no name has been specified explicitly.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.Constraint.DefaultErrorMessage">
            <summary>
            Represents the default error message of a constraint when no error message has been specified explicitly.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint.AcceptVisitor(Kingo.Messaging.Validation.IConstraintVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint.Any``1(Kingo.Messaging.Validation.IConstraint{``0}[])">
            <summary>
            Returns a logical OR-constraint composed of the specified <paramref name="constraints"/>.
            </summary>
            <typeparam name="TValue">Type of the value to check.</typeparam>
            <param name="constraints">A set of constraints.</param>
            <returns>A logical OR-constraint composed of the specified <paramref name="constraints"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraints"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint.All``1(Kingo.Messaging.Validation.IConstraint{``0}[])">
            <summary>
            Returns a logical AND-constraint composed of the specified <paramref name="constraints"/>.
            </summary>
            <typeparam name="TValue">Type of the value to check.</typeparam>
            <param name="constraints">A set of constraints.</param>
            <returns>A logical AND-constraint composed of the specified <paramref name="constraints"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraints"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.Constraint`1">
            <summary>
            Provides a base implementation of the <see cref="T:Kingo.Messaging.Validation.IConstraint`1"/> interface.
            </summary>
            <typeparam name="TValue">Type of the constraint value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Constraint`1" /> class.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.#ctor(Kingo.Messaging.Validation.Constraint{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Constraint`1" /> class.
            </summary>
            <param name="constraint">Constraint to copy.</param>        
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.#ctor(Kingo.Messaging.Validation.Constraint{`0},Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Constraint`1" /> class.
            </summary>
            <param name="constraint">Constraint to copy.</param>
            <param name="errorMessage">The error message of this constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.#ctor(Kingo.Messaging.Validation.Constraint{`0},Kingo.Messaging.Validation.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Constraint`1" /> class.
            </summary>
            <param name="constraint">Constraint to copy.</param>
            <param name="name">The name of this constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.WithErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.And(System.Predicate{`0},System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.And(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.And(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Or(System.Predicate{`0},System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Or(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Or(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Kingo#Messaging#Validation#IConstraint{TValue}#Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Invert">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Invert(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.MapInputToOutput">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.ToDelegate">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Constraint`1.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.ConstraintInverter`1">
            <summary>
            Represents a constraint that negates another constraint.
            </summary>
            <typeparam name="TValue">Type of the constraint value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.#ctor(Kingo.Messaging.Validation.IConstraintWithErrorMessage{`0},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ConstraintInverter`1" /> class.
            </summary>
            <param name="constraint">The constraint that is to be negated.</param>  
            <param name="errorMessage">Error message to use when no other is specified.</param>      
            <param name="name">Name to use when no other is specified.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format or <paramref name="name"/> is not a valid identifier.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.#ctor(Kingo.Messaging.Validation.IConstraintWithErrorMessage{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ConstraintInverter`1" /> class.
            </summary>
            <param name="constraint">The constraint that is to be negated.</param>  
            <param name="errorMessage">Error message to use when no other is specified.</param>      
            <param name="name">Name to use when no other is specified.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Kingo.Messaging.Validation.ConstraintInverter`1.NameIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="P:Kingo.Messaging.Validation.ConstraintInverter`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.AcceptVisitor(Kingo.Messaging.Validation.IConstraintVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintInverter`1.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.ConstraintValidator`1">
            <summary>
            Represents a <see cref="T:Kingo.Messaging.Validation.IRequestMessageValidator`1" /> that is implemented using constraints.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintValidator`1.#ctor(System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ConstraintValidator`1" /> class.
            </summary>                
            <param name="formatProvider">Optional <see cref="T:System.IFormatProvider" /> to use when formatting error messages.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintValidator`1.Validate(`0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintValidator`1.CreateErrorInfoBuilder(System.IFormatProvider)">
            <summary>
            Creates and returns a new <see cref="T:Kingo.Messaging.Validation.ErrorInfoBuilder" /> that will be used to collect all error messages during validation.
            </summary>
            <param name="formatProvider">
            The format provider that is used to format all error messages.
            </param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.ErrorInfoBuilder" />.</returns>
        </member>
        <member name="T:Kingo.Messaging.Validation.ConstraintVisitor">
            <summary>
            Provides a base implementation of the <see cref="T:Kingo.Messaging.Validation.IConstraintVisitor"/> interface.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintVisitor.VisitAnd(Kingo.Messaging.Validation.IConstraint)">
            <summary>
            Visits the specified <paramref name="andConstraint"/>.
            </summary>
            <param name="andConstraint">A logical AND-constraint.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintVisitor.VisitOr(Kingo.Messaging.Validation.IConstraintWithErrorMessage)">
            <summary>
            Visits the specified <paramref name="orConstraint"/>.
            </summary>
            <param name="orConstraint">A logical OR-constraint.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintVisitor.VisitInverse(Kingo.Messaging.Validation.IConstraintWithErrorMessage)">
            <summary>
            Visits the specified <paramref name="inverseConstraint"/>.
            </summary>
            <param name="inverseConstraint">A logical NOT-constraint.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.ConstraintVisitor.Visit(Kingo.Messaging.Validation.IConstraintWithErrorMessage)">
            <summary>
            Visits the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">The visited constraint.</param>
        </member>
        <member name="T:Kingo.Messaging.Validation.DelegateConstraint`1">
            <summary>
            Represents a constraint that checks whether or not a value satisfies a predicate that is passed in as a delegate.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateConstraint`1.#ctor(System.Predicate{`0},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.DelegateConstraint`1" /> class.
            </summary>
            <param name="constraint">A delegate that represents the constraint.</param> 
            <param name="errorMessageArgument">
            The object that is used to format the error message on behalf of this constraint.
            </param>       
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateConstraint`1.ToDelegate">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateConstraint`1.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateFilter`3.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateFilter`3.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateFilter`3.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateFilter`3.IsSatisfiedBy(`1)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.DelegateFilter`3.IsSatisfiedBy(`1,`2@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.EnumConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumConstraints.IsInRangeOfValidValues``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.String)">
            <summary>
            Verifies whether or not the specified <paramref name="member"/> does not contain any value or bitflags
            that is/are not in range of acceptable values of the defining Enum type.
            </summary>        
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumConstraints.IsInRangeOfValidValues``1(``0)">
            <summary>
            Determines whether or not the specified <paramref name="value"/> does not contain any value or bitflags
            that is/are not in range of acceptable values of the defining Enum type.
            </summary>
            <param name="value">The value to check.</param>
            <returns>
            <c>true</c> if <paramref name="value"/> is not a Flags enum and represents one of the allowed values, or
            if <paramref name="value"/> is a flags enum and all flags are valid flags of this enum;
            otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <typeparamref name="TEnum"/> is not an Enum type.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumConstraints.IsFlagsEnum(System.Enum)">
            <summary>
            Determines whether or not the enum is decorated with the <see cref="T:System.FlagsAttribute" />.
            </summary>
            <param name="value">The value to check.</param>
            <returns>
            <c>true</c> if the <see cref="T:System.FlagsAttribute" /> has been declared on the specified <paramref name="value"/>;
            otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumConstraints.IsDefined``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},System.String)">
            <summary>
            Verifies whether or not the specified <paramref name="member"/> is defined as a constant by the specified Enum type.
            </summary>        
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumConstraints.IsDefined(System.Enum)">
            <summary>
            Determines whether or not the specified <paramref name="value"/> is valid relative to the values that have been
            declare on the enum type itself.
            </summary>
            <param name="value">The value to check.</param>
            <returns>
            <c>true</c> if <paramref name="value"/> is not a Flags enum and represents one of the allowed values, or
            if <paramref name="value"/> is a flags enum and all flags are valid flags of this enum;
            otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumConstraints.HasFlag``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,``1},``1,System.String)">
            <summary>
            Verifies whether or not the specified <paramref name="member"/> has all specified flags of the <paramref name="flag"/> value set.
            </summary>        
            <param name="member">A member.</param>
            <param name="flag">The flag(s) to check for.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>   
            <returns>A member that has been merged with the specified member.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>          
            <exception cref="T:System.ArgumentException">
            <paramref name="flag"/> is not an Enum type or <paramref name="errorMessage"/> is not in a correct format.
            </exception> 
        </member>
        <member name="T:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1">
            <summary>
            Represents a constraint that checks whether or not an Enum value has any value or bitflags
            that is/are not in range of acceptable values of the defining Enum type.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1.EnumType">
            <summary>
            Returns the type of enumeration this constraint is for.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsInRangeOfValidValuesConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1">
            <summary>
            Represents a constraint that checks whether or not an enum value is within range of its valid values.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1.EnumType">
            <summary>
            Returns the type of enumeration this constraint is for.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumIsDefinedConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.EnumHasFlagConstraint`1">
            <summary>
            Represents a constraint that checks whether or not all bitflags of a specific Enum value are set on the specified (checked) value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.EnumHasFlagConstraint`1.Flag">
            <summary>
            The flag(s) to check.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumHasFlagConstraint`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.EnumHasFlagConstraint`1" /> class.
            </summary>    
            <param name="flag">The flag(s) to check.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.EnumHasFlagConstraint`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumHasFlagConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumHasFlagConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.EnumHasFlagConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.ExpressionNotSupportedException">
            <summary>
            This exception is thrown when an expression of which its type or contents are not supported by a method.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ExpressionNotSupportedException" /> class.
            </summary>
            <param name="expression">The expression that was not supported.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="expression"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ExpressionNotSupportedException" /> class.
            </summary>
            <param name="expression">The expression that was not supported.</param>
            <param name="message">Message of the exception.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="expression"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.ExpressionNotSupportedException.#ctor(System.Linq.Expressions.Expression,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ExpressionNotSupportedException" /> class.
            </summary>
            <param name="expression">The expression that was not supported.</param>
            <param name="message">Message of the exception.</param>
            <param name="innerException">Cause of this exception.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="expression"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.ExpressionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.ExpressionNotSupportedException" /> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.ExpressionNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="P:Kingo.Messaging.Validation.ExpressionNotSupportedException.Expression">
            <summary>
            The expression that was not supported in string-form.
            </summary>
        </member>
        <member name="T:Kingo.Messaging.Validation.Filter`2">
            <summary>
            Provides a base class for the <see cref="T:Kingo.Messaging.Validation.IFilter`2"/> interface.
            </summary>
            <typeparam name="TValueIn">Type of the input (checked) value.</typeparam>
            <typeparam name="TValueOut">Type of the output value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.#ctor(Kingo.Messaging.Validation.Filter{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Constraint`1" /> class.
            </summary>
            <param name="filter">Filter to copy.</param>        
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.#ctor(Kingo.Messaging.Validation.Filter{`0,`1},Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Filter`2" /> class.
            </summary>
            <param name="filter">Filter to copy.</param>
            <param name="errorMessage">The error message of this constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="filter"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.#ctor(Kingo.Messaging.Validation.Filter{`0,`1},Kingo.Messaging.Validation.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Filter`2" /> class.
            </summary>
            <param name="filter">Filter to copy.</param>
            <param name="name">The name of this constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="filter"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.WithName(Kingo.Messaging.Validation.Identifier)">
            <summary>
            When overridden, creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>   
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.WithErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            When overridden, creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.And(System.Predicate{`0},System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.And(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.And(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.And``1(Kingo.Messaging.Validation.IFilter{`1,``0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Or(System.Predicate{`0},System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Or(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Or(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Kingo#Messaging#Validation#IConstraint{TValueIn}#Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Invert">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Invert(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.ToDelegate">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.IsSatisfiedBy(`0,`1@)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Filter`2.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@,`1@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.GuidConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidConstraints.IsNotEmpty``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.Guid},System.String)">
            <summary>
            Verifies that the value is not an empty <see cref="T:System.Guid" />.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidConstraints.IsEmpty``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.Guid},System.String)">
            <summary>
            Verifies that the value is an empty <see cref="T:System.Guid" />.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint">
            <summary>
            Represents a constraint that checks whether or not a <see cref="T:System.Guid" /> is an empty guid..
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsNotEmptyConstraint.IsSatisfiedBy(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.GuidIsEmptyConstraint">
            <summary>
            Represents a constraint that checks whether or not a <see cref="T:System.Guid" /> is an empty guid..
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsEmptyConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.GuidIsEmptyConstraint" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.GuidIsEmptyConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsEmptyConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsEmptyConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsEmptyConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.GuidIsEmptyConstraint.IsSatisfiedBy(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IConstraint">
            <summary>
            When implemented by a class, represents a constraint.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint.AcceptVisitor(Kingo.Messaging.Validation.IConstraintVisitor)">
            <summary>
            Accepts the specified <paramref name="visitor"/>.
            </summary>
            <param name="visitor">The visitor of this constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="visitor"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.IConstraint`1">
            <summary>
            When implemented by a class, represents a constraint for a certain value.
            </summary>
            <typeparam name="TValue">Type of the value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.And(System.Predicate{`0},System.String,System.String)">
            <summary>
            Creates and returns a logical AND constraint for this and the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">Another constraint.</param>
            <param name="errorMessage">Error message associated with the constraint.</param>
            <param name="name">Name of the constraint.</param>
            <returns>A logical AND constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.And(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a logical AND constraint for this and the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">Another constraint.</param>
            <param name="errorMessage">Error message associated with the constraint.</param>
            <param name="name">Name of the constraint.</param>
            <returns>A logical AND constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.And(Kingo.Messaging.Validation.IConstraint{`0})">
            <summary>
            Creates and returns a logical AND constraint for this and the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">Another constraint.</param>
            <returns>A logical AND constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.Or(System.Predicate{`0},System.String,System.String)">
            <summary>
            Creates and returns a logical OR constraint for this and the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">Another constraint.</param>
            <param name="errorMessage">Error message associated with the constraint.</param>
            <param name="name">Name of the constraint.</param>
            <returns>A logical OR constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.Or(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a logical OR constraint for this and the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">Another constraint.</param>
            <param name="errorMessage">Error message associated with the constraint.</param>
            <param name="name">Name of the constraint.</param>
            <returns>A logical OR constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.Or(Kingo.Messaging.Validation.IConstraint{`0})">
            <summary>
            Creates and returns a logical OR constraint for this and the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">Another constraint.</param>
            <returns>A logical OR constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.Invert">
            <summary>
            Creates and returns a constraint that negates this constraint.
            </summary>        
            <returns>A constraint that is the logical opposite of this constraint.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.Invert(System.String,System.String)">
            <summary>
            Creates and returns a constraint that negates this constraint.
            </summary>
            <param name="errorMessage">Error message of the inverting constraint.</param>
            <param name="name">Name of the inverting constraint.</param>
            <returns>A constraint that is the logical opposite of this constraint.</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format or <paramref name="name"/> is not a valid identifier.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a constraint that negates this constraint.
            </summary>
            <param name="errorMessage">Error message of the inverting constraint.</param>
            <param name="name">Name of the inverting constraint.</param>
            <returns>A constraint that is the logical opposite of this constraint.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.MapInputToOutput">
            <summary>
            Converts this constraint to a constraint that maps the input to the output.
            </summary>
            <returns>A new constraint wrapping the current constraint that maps the input to the output.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.ToDelegate">
            <summary>
            Converts this constraints to a delegate.
            </summary>
            <returns>A delegate that represents this constraint.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.IsSatisfiedBy(`0)">
            <summary>
            Determines whether or not the specified <paramref name="value"/> satisfies this constraint.
            </summary>
            <param name="value">The value to check.</param>
            <returns><c>true</c> if the value satisfies this constraint; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraint`1.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@)">
            <summary>
            Determines whether or not the specified <paramref name="value"/> satisfies this constraint.
            </summary>
            <param name="value">The value to check.</param>
            <param name="errorMessage">
            If this method returns <c>true</c>, this parameter will be set to the error of the constraint that failed;
            otherwise, it will be <c>null</c>.
            </param>
            <returns><c>true</c> if the value satisfies this constraint; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Kingo.Messaging.Validation.IConstraintVisitor">
            <summary>
            When implemented by a class, represent a visitor of <see cref="T:Kingo.Messaging.Validation.IConstraint">Constraints</see>.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintVisitor.VisitAnd(Kingo.Messaging.Validation.IConstraint,System.Collections.Generic.IEnumerable{Kingo.Messaging.Validation.IConstraint})">
            <summary>
            Visits the specified <paramref name="andConstraint"/> and its children.
            </summary>
            <param name="andConstraint">A logical AND-constraint.</param>
            <param name="childConstraints">The children of the AND-constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="andConstraint"/> or <paramref name="childConstraints"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintVisitor.VisitOr(Kingo.Messaging.Validation.IConstraintWithErrorMessage,System.Collections.Generic.IEnumerable{Kingo.Messaging.Validation.IConstraint})">
            <summary>
            Visits the specified <paramref name="orConstraint"/> and its children.
            </summary>
            <param name="orConstraint">A logical OR-constraint.</param>
            <param name="childConstraints">The children of the OR-constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="orConstraint"/> or <paramref name="childConstraints"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintVisitor.VisitInverse(Kingo.Messaging.Validation.IConstraintWithErrorMessage,Kingo.Messaging.Validation.IConstraint)">
            <summary>
            Visits the specified <paramref name="inverseConstraint"/> and the corresponding <paramref name="invertedConstraint"/>.
            </summary>
            <param name="inverseConstraint">The logical NOT- or inverse constraint.</param>
            <param name="invertedConstraint">The inverted constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="inverseConstraint"/> or <paramref name="invertedConstraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintVisitor.Visit(Kingo.Messaging.Validation.IConstraintWithErrorMessage)">
            <summary>
            Visits the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">A non-composite constraint.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.IConstraintWithErrorMessage">
            <summary>
            When implemented by a class, represents a constraint with a name and associated error message.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IConstraintWithErrorMessage.Name">
            <summary>
            Name of the constraint.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IConstraintWithErrorMessage.ErrorMessage">
            <summary>
            Error message associated with this constraint.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage.WithName(System.String)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is not valid <see cref="T:Kingo.Messaging.Validation.Identifier" />.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage.WithName(Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage.WithErrorMessage(System.String)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="T:Kingo.Messaging.Validation.IConstraintWithErrorMessage`1">
            <summary>
            When implemented by a class, represents a constraint with a name and associated error message.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage`1.WithName(System.String)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is not valid <see cref="T:Kingo.Messaging.Validation.Identifier" />.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage`1.WithErrorMessage(System.String)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IConstraintWithErrorMessage`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="T:Kingo.Messaging.Validation.IErrorMessageWriter`1">
            <summary>
            When implemented by a class, represents a producer of error messages.
            </summary>
            <typeparam name="T">Type of the instances for which the error messages are produced.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.IErrorMessageWriter`1.WriteErrorMessages(`0,Kingo.Messaging.Validation.IErrorMessageCollection,System.Boolean)">
            <summary>
            Validates the specified <paramref name="instance"/> and writes all error messages to the specified <paramref name="reader"/>.
            </summary>
            <param name="instance">The instance that is validated.</param>
            <param name="reader">A reader or consumer of all error messages.</param> 
            <param name="haltOnFirstError">
            Indicates whether or not this method should return as soon as the first validation error is found.
            </param>
            <returns><c>true</c> if any errors were detected; otherwise <c>false</c>.</returns>      
            <exception cref="T:System.ArgumentNullException">
            <paramref name="instance"/> or <paramref name="reader"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="T:Kingo.Messaging.Validation.IFilter`2">
            <summary>
            When implemented by a class, represents a filter-constraint that transforms an input value to an output value.
            </summary>
            <typeparam name="TValueIn">Type in the input value.</typeparam>
            <typeparam name="TValueOut">Type of the output value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilter`2.And``1(Kingo.Messaging.Validation.IFilter{`1,``0})">
            <summary>
            Creates and returns a logical AND constraint for this and the specified <paramref name="filter"/>.
            </summary>
            <param name="filter">Another constraint.</param>
            <returns>A logical AND constraint.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="filter"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilter`2.IsSatisfiedBy(`0,`1@)">
            <summary>
            Determines whether or not the specified <paramref name="valueIn"/> satisfies this constraint.
            </summary>
            <param name="valueIn">The value to check.</param>
            <param name="valueOut">
            If this method returns <c>true</c>, will be assigned the output value of this constraint;
            otherwise it will be assigned the default value.
            </param>
            <returns><c>true</c> if the value satisfies this constraint; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilter`2.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@,`1@)">
            <summary>
            Determines whether or not the specified <paramref name="valueIn"/> satisfies this constraint.
            </summary>
            <param name="valueIn">The value to check.</param>
            <param name="errorMessage">
            If this method returns <c>true</c>, this parameter will be set to the error of the constraint that failed;
            otherwise, it will be <c>null</c>.
            </param>
            <param name="valueOut">
            If this method returns <c>false</c>, will be assigned the output value of this constraint;
            otherwise it will be assigned the default value.
            </param>
            <returns><c>true</c> if the value satisfies this constraint; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Kingo.Messaging.Validation.IFilterWithErrorMessage`2">
            <summary>
            When implemented by a class, represents a filter-constraint with a name and associated error message.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilterWithErrorMessage`2.WithName(System.String)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is not valid <see cref="T:Kingo.Messaging.Validation.Identifier" />.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilterWithErrorMessage`2.WithName(Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="name"/>.
            </summary>
            <param name="name">New name of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="name"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilterWithErrorMessage`2.WithErrorMessage(System.String)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IFilterWithErrorMessage`2.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Creates and returns a copy of this constraint, assigning the specified <paramref name="errorMessage"/>.
            </summary>
            <param name="errorMessage">New error message of the constraint.</param>
            <returns>A copy of this constraint with the specified <paramref name="errorMessage"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="errorMessage"/> is <c>null</c>.
            </exception>        
        </member>
        <member name="T:Kingo.Messaging.Validation.IMember">
            <summary>
            When implemented by a class, represent a certain member that can be validated.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IMember.DisplayName">
            <summary>
            The display name of this member.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IMember.FullName">
            <summary>
            The full name of this member.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IMember.Name">
            <summary>
            The name of this member.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IMember.Type">
            <summary>
            The type of this member's value.
            </summary>
        </member>
        <member name="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1">
            <summary>
            Represents a builder of constraints for a specific member of a message.
            </summary>
            <typeparam name="T">Type of the object the error messages are produced for.</typeparam>
        </member>
        <member name="P:Kingo.Messaging.Validation.IMemberConstraintBuilder`1.Key">
            <summary>
            Returns a unique identifier of the constraint.
            </summary>
        </member>
        <member name="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2">
            <summary>
            Represents a constraint for a specific member of a message.
            </summary>    
            <typeparam name="T">Type of the message the error messages are produced for.</typeparam>
            <typeparam name="TValueOut">Type of the result the value is converted to.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.And``1(System.Linq.Expressions.Expression{System.Func{`0,`1,``0}})">
            <summary>
            Selects a field or property of type <typeparamref name="TOther"/> from the current value of type <typeparamref name="TValueOut"/>
            with the intention to add some field- or property-specific constraints.
            </summary>
            <typeparam name="TOther">Type of the member.</typeparam>
            <param name="fieldOrProperty">The expression that selects the member.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fieldOrProperty"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="fieldOrProperty"/> is not a supported expression.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.And``1(System.Func{`0,`1,``0},System.String)">
            <summary>
            Selects a field or property of type <typeparamref name="TOther"/> from the current value of type <typeparamref name="TValueOut"/>
            with the intention to add some field- or property-specific constraints.
            </summary>
            <typeparam name="TOther">Type of the member.</typeparam>
            <param name="fieldOrProperty">The delegate that selects the member.</param>
            <param name="fieldOrPropertyName">Name of the member.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fieldOrProperty"/> or <paramref name="fieldOrPropertyName" /> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="fieldOrPropertyName"/> is not a valid identifier.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.And``1(System.Func{`0,`1,``0},Kingo.Messaging.Validation.Identifier)">
            <summary>
            Selects a field or property of type <typeparamref name="TOther"/> from the current value of type <typeparamref name="TValueOut"/>
            with the intention to add some field- or property-specific constraints.
            </summary>
            <typeparam name="TOther">Type of the member.</typeparam>
            <param name="fieldOrProperty">The delegate that selects the member.</param>
            <param name="fieldOrPropertyName">Name of the member.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fieldOrProperty"/> or <paramref name="fieldOrPropertyName" /> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.And(System.Action{Kingo.Messaging.Validation.IMemberConstraintSet{`1}})">
            <summary>
            Descends one level down in the validation-hierarchy.
            </summary>
            <param name="innerConstraintFactory">
            The delegate that is used to define constraints on the properties or children of this member's value.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="innerConstraintFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.IsNotInstanceOf``1(System.String)">
            <summary>
            Verifies that this member's value is not an instance of <typeparamref name="TOther"/>.
            </summary>
            <typeparam name="TOther">Type to compare this member's type to.</typeparam>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>This member.</returns>        
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.IsInstanceOf``1(System.String)">
            <summary>
            Verifies that this member'value is an instance of <typeparamref name="TOther"/>.
            </summary>
            <typeparam name="TOther">Type to compare this member's type to.</typeparam>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>A member casted to <typeparamref name="TOther"/>.</returns>        
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.As``1">
            <summary>
            Casts the output of this member to an instance of the specified type <typeparamref name="TOther"/>.
            </summary>
            <typeparam name="TOther">Type to cast this member's type to.</typeparam>
            <returns>The casted member.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``1(System.Int32,System.String)">
            <summary>
            Verifies that this member has an item at the specified <paramref name="index"/> and returns it.
            </summary>               
            <param name="index">Index of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>              
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``1(System.String,System.String)">
            <summary>
            Verifies that this member has an item at the specified <paramref name="index"/> and returns it.
            </summary>               
            <param name="index">Index of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>              
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``2(``1,System.String)">
            <summary>
            Verifies that this member has an item at the specified <paramref name="index"/> and returns it.
            </summary>               
            <param name="index">Index of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>              
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``3(``1,``2,System.String)">
            <summary>
            Verifies that this member has an item at the specified indices and returns it.
            </summary>              
            <param name="indexA">First index of the element to select.</param>      
            <param name="indexB">Second index of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>              
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``2(System.Func{`0,``1},System.String)">
            <summary>
            Verifies that this member has an item at the specified <paramref name="indexFactory"/> and returns it.
            </summary>               
            <param name="indexFactory">Index of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>  
            <exception cref="T:System.ArgumentNullException">
            <paramref name="indexFactory"/> is <c>null</c>.
            </exception>            
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``3(System.Func{`0,``1},System.Func{`0,``2},System.String)">
            <summary>
            Verifies that this member has an item at the specified indices and returns it.
            </summary>              
            <param name="indexAFactory">First index of the element to select.</param>      
            <param name="indexBFactory">Second index of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="indexAFactory" /> or <paramref name="indexBFactory" /> is <c>null</c>.
            </exception>               
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.HasItem``1(Kingo.Messaging.Validation.IndexListFactory{`0},System.String)">
            <summary>
            Verifies that this member has an item at the indicies that are provided by the specified <paramref name="indexListFactory"/>.
            </summary>               
            <param name="indexListFactory">A list of delegates that return the indices of the element to select.</param>      
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>     
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> instance that contains the member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="indexListFactory"/> is <c>null</c>.
            </exception>       
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.Satisfies(System.Predicate{`1},System.String,System.Object)">
            <summary>
            Applies the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">The constraint to apply.</param>   
            <param name="errorMessage">Error message of the constraint.</param>  
            <param name="errorMessageArgument">
            The object that is used to format the error message on behalf of this constraint.
            </param>               
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraint"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.Satisfies(Kingo.Messaging.Validation.IConstraint{`1})">
            <summary>
            Applies the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">The constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraint"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.Satisfies(System.Func{`0,Kingo.Messaging.Validation.IConstraint{`1}})">
            <summary>
            Applies the constraint that is created by the specified <paramref name="constraintFactory"/>.
            </summary>
            <param name="constraintFactory">A delegate used to create the constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraintFactory"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraintFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.Satisfies``1(Kingo.Messaging.Validation.IFilter{`1,``0})">
            <summary>
            Applies the specified <paramref name="constraint"/>.
            </summary>
            <param name="constraint">The constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraint"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintBuilder`2.Satisfies``1(System.Func{`0,Kingo.Messaging.Validation.IFilter{`1,``0}})">
            <summary>
            Applies the constraint that is created by the specified <paramref name="constraintFactory"/>.
            </summary>
            <param name="constraintFactory">A delegate used to create the constraint to apply.</param>                
            <returns>A <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" /> that has applied the specified <paramref name="constraintFactory"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraintFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.IMemberConstraintSet`1">
            <summary>
            When implemented by a class, a <see cref="T:Kingo.Messaging.Validation.IMemberConstraintSet`1" /> can be used to validate the values of
            certain members of another instance.
            </summary>
            <typeparam name="T">Type of the message the constraints apply to.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintSet`1.VerifyThatInstance">
            <summary>
            Creates and returns a new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on the message itself instead on one of its particular members.
            </summary>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/>.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintSet`1.VerifyThat``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates and returns a new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue">Type of the value to verify.</typeparam>
            <param name="fieldOrProperty">
            An expression that returns an instance of <typeparamref name="TValue"/>.
            </param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on <typeparamref name="TValue"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fieldOrProperty"/> is <c>null</c>.
            </exception>        
            <exception cref="T:System.ArgumentException">
            <paramref name="fieldOrProperty"/> is not a supported expression.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintSet`1.VerifyThat``1(System.Func{`0,``0},System.String)">
            <summary>
            Creates and returns a new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue">Type of the value to verify.</typeparam>
            <param name="fieldOrProperty">
            A delegate that returns an instance of <typeparamref name="TValue"/>.
            </param>
            <param name="fieldOrPropertyName">The name of the member to add constraints for.</param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on <typeparamref name="TValue"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fieldOrProperty"/> or <paramref name="fieldOrPropertyName"/> is <c>null</c>.
            </exception> 
            <exception cref="T:System.ArgumentException">
            <paramref name="fieldOrPropertyName"/> is not a valid identifier.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IMemberConstraintSet`1.VerifyThat``1(System.Func{`0,``0},Kingo.Messaging.Validation.Identifier)">
            <summary>
            Creates and returns a new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue">Type of the value to verify.</typeparam>
            <param name="fieldOrProperty">
            A delegate that returns an instance of <typeparamref name="TValue"/>.
            </param>
            <param name="fieldOrPropertyName">The name of the member to add constraints for.</param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`2"/> that can be used to define certain
            constraints on <typeparamref name="TValue"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fieldOrProperty"/> or <paramref name="fieldOrPropertyName"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="T:Kingo.Messaging.Validation.IndexerInvocationException">
            <summary>
            This exception is thrown when an attempt to invoke an indexer on a instance failed
            because the indexer was not found or the specified index values were not valid.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexerInvocationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IndexerInvocationException" /> class.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexerInvocationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IndexerInvocationException" /> class.
            </summary>
            <param name="message">Message of the exception.</param>
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexerInvocationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IndexerInvocationException" /> class.
            </summary>
            <param name="message">Message of the exception.</param>
            <param name="innerException">Cause of this exception.</param>
        </member>
        <member name="T:Kingo.Messaging.Validation.IndexListFactory`1">
            <summary>
            Represents a list of delegates that are used to obtain the type and the argument-values for indexer-invocations.
            </summary>
            <typeparam name="T">Type of the instance that will serve as the input for the delegates.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexListFactory`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.IndexList" /> class.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IndexListFactory`1.Count">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexListFactory`1.Add``1(System.Func{`0,``0})">
            <summary>
            Adds a new index-delegate to this list.
            </summary>
            <typeparam name="TValue">Type of the return-value of the delegate.</typeparam>
            <param name="indexFactory">The delegate to add.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="indexFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexListFactory`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.IndexListFactory`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.InputToOutputMapper`1">
            <summary>
            Represents a wrapper for an instance implementing the <see cref="T:Kingo.Messaging.Validation.IConstraint`1"/> interface
            so that it can be used as an instance implementing the <see cref="T:Kingo.Messaging.Validation.IFilter`2" /> interface.
            </summary>
            <typeparam name="TValue">Type of the constraint value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.#ctor(Kingo.Messaging.Validation.IConstraint{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.InputToOutputMapper`1" /> class.
            </summary>
            <param name="constraint">The constraint to wrap.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraint"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.AcceptVisitor(Kingo.Messaging.Validation.IConstraintVisitor)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.And(System.Predicate{`0},System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.And(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.And(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.And``1(Kingo.Messaging.Validation.IFilter{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.Or(System.Predicate{`0},System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.Or(System.Predicate{`0},Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.Or(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.Invert">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.Invert(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.ToDelegate">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.IsSatisfiedBy(`0,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.InputToOutputMapper`1.IsNotSatisfiedBy(`0,Kingo.Messaging.Validation.IErrorMessageBuilder@,`0@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.IRange`1">
            <summary>
            When implemented by a class, represents a range of values of type <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue">Type of the values in the range.</typeparam>
        </member>
        <member name="P:Kingo.Messaging.Validation.IRange`1.Left">
            <summary>
            Returns the left boundary of this range.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IRange`1.Right">
            <summary>
            Returns the right boundary of the range.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IRange`1.IsLeftInclusive">
            <summary>
            Indicates whether or not <see cref="P:Kingo.Messaging.Validation.IRange`1.Left" /> is part of this range.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.IRange`1.IsRightInclusive">
            <summary>
            Indicates whether or not <see cref="P:Kingo.Messaging.Validation.IRange`1.Right" /> is part of this range.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.IRange`1.Contains(`0)">
            <summary>
            Indicates whether or not the specified <paramref name="value"/> lies within the current range.
            </summary>
            <param name="value">The value to check.</param>
            <returns><c>true</c> when <paramref name="value"/> is part of this range; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintBuilder`3.IsNotInstanceOf``1(System.String)">
            <inheritdoc />      
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintBuilder`3.IsInstanceOf``1(System.String)">
            <inheritdoc />     
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintBuilder`3.As``1">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.MemberConstraintSet`1">
            <summary>
            Represents a set of constraints declared or added for (members of) a specific type.
            </summary>
            <typeparam name="T">Type of the object the constraints are added for.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.MemberConstraintSet`1" /> class.
            </summary>                
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.VerifyThatInstance">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.VerifyThat``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.VerifyThat``1(System.Func{`0,``0},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.VerifyThat``1(System.Func{`0,``0},Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.MemberConstraintSet`1.WriteErrorMessages(`0,Kingo.Messaging.Validation.IErrorMessageCollection,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.NullableConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.NullableConstraints.HasValue``2(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.Nullable{``1}},System.String)">
            <summary>
            Verifies whether or not the <paramref name="member"/>'s value is not <c>null</c>.
            </summary>
            <param name="member">A member.</param> 
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>       
            <returns>A member containing the value of this member's value.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.HasValueFilter`1">
            <summary>
            Represents a filter that transforms a <see cref="T:System.Nullable`1" /> into a value.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.HasValueFilter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.HasValueFilter`1" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.HasValueFilter`1.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasValueFilter`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasValueFilter`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasValueFilter`1.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasValueFilter`1.IsSatisfiedBy(System.Nullable{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.HasValueFilter`1.IsSatisfiedBy(System.Nullable{`0},`0@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.NullConstraint`1">
            <summary>
            Represents a constraint that is always satisfied.
            </summary>
            <typeparam name="TValue">Type of the constraint value.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.NullConstraint`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.NullConstraint`1" /> class.
            </summary>        
        </member>
        <member name="M:Kingo.Messaging.Validation.NullConstraint`1.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.NullConstraint`1.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.NullConstraint`1.And(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.NullConstraint`1.Or(Kingo.Messaging.Validation.IConstraint{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.NullConstraint`1.IsSatisfiedBy(`0)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.PropertyChangedEventArgs`1">
            <summary>
            Represents an event-argument of events that can be raised when the value of a property changes.
            </summary>
            <typeparam name="TValue">Property type.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.PropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.PropertyChangedEventArgs`1" /> class.
            </summary>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.PropertyChangedEventArgs`1.OldValue">
            <summary>
            The old value of the property.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.PropertyChangedEventArgs`1.NewValue">
            <summary>
            The new value of the property.
            </summary>
        </member>
        <member name="T:Kingo.Messaging.Validation.Range`1">
            <summary>
            Represents a range or domain of values.
            </summary>
            <typeparam name="TValue">Type of values in this range.</typeparam>
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.#ctor(`0,`0,Kingo.Messaging.Validation.RangeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Range`1" /> class.
            </summary>
            <param name="left">The lower boundary of this range.</param>
            <param name="right">The upper boundary of this range.</param>
            <param name="options">
            The options indicating whether or <paramref name="left"/> and/or <paramref name="right"/> are part of this range themselves.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.#ctor(`0,`0,System.Collections.Generic.IComparer{`0},Kingo.Messaging.Validation.RangeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.Range`1" /> class.
            </summary>
            <param name="left">The lower boundary of this range.</param>
            <param name="right">The upper boundary of this range.</param>
            <param name="comparer">Optional comparer to use when comparing two instances.</param>
            <param name="options">
            The options indicating whether or <paramref name="left"/> and/or <paramref name="right"/> are part of this range themselves.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="left"/> and <paramref name="right"/> do not represent a valid range
            - or -
            both are equal and <paramref name="options"/> specifies at least one exclusive boundary
            - or -
            <paramref name="comparer"/> is <c>null</c> and the specified instances do not implement the <see cref="T:System.IComparable`1" /> interface.
            </exception>
        </member>
        <member name="P:Kingo.Messaging.Validation.Range`1.Left">
            <inheritdoc />
        </member>
        <member name="P:Kingo.Messaging.Validation.Range`1.Right">
            <inheritdoc />
        </member>
        <member name="P:Kingo.Messaging.Validation.Range`1.IsLeftInclusive">
            <summary>
            Indicates whether or not the lower boundary is included within the range.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.Range`1.IsLeftExclusive">
            <summary>
            Indicates whether or not the lower boundary is excluded from the range.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.Range`1.IsRightInclusive">
            <summary>
            Indicates whether or not the upper boundary is included within the range.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.Range`1.IsRightExclusive">
            <summary>
            Indicates whether or not the upper boundary is excluded from the range.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.Equals(Kingo.Messaging.Validation.Range{`0})">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.Range`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.RangeOptions">
            <summary>
            Represents a set of options that can be used to determine whether or not a <see cref="T:Kingo.Messaging.Validation.Range`1" />'s
            boundaries are part of that range themselves.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.RangeOptions.AllInclusive">
            <summary>
            Specifies that both boundaries are included in the range themselves.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.RangeOptions.LeftExclusive">
            <summary>
            Specifies that the left boundary of not part of the range.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.RangeOptions.RightExclusive">
            <summary>
            Specifies that the right boundary is not part of the range.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.RangeOptions.AllExclusive">
            <summary>
            Specifies that both the left and the right boundary are not part of the range.
            </summary>
        </member>
        <member name="T:Kingo.Messaging.Validation.StringConstraints">
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
            <summary>
            Contains a set of extension methods specific for members of type <see cref="T:Kingo.Messaging.Validation.IMemberConstraintBuilder`1" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotContain``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Char,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not contain the specified <paramref name="value"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="value">The value to check for.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotContain``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not contain the specified <paramref name="value"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="value">The value to check for.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="value"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.Contains``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Char,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value contains the specified <paramref name="value"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="value">The value to check for.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.Contains``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value contains the specified <paramref name="value"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="value">The value to check for.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="value"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotEndWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not end with the specified <paramref name="postfix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="postfix">The postfix this value should not end with.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="postfix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotEndWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.StringComparison,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not end with the specified <paramref name="postfix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="postfix">The postfix this value should not end with.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="postfix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.EndsWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value ends with the specified <paramref name="postfix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="postfix">The postfix this value should end with.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="postfix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.EndsWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.StringComparison,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value ends with the specified <paramref name="postfix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="postfix">The postfix this value should end with.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="postfix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsNotEqualTo``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.StringComparison,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value is not equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="other">The value to compare.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsEqualTo``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.StringComparison,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value is equal to <paramref name="other"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="other">The value to compare.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsIdentifier``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value can be converted to an <see cref="T:Kingo.Messaging.Validation.Identifier" />.
            </summary>
            <param name="member">A member.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsNotNullOrEmpty``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value is not <c>null</c> or an empty string.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsNullOrEmpty``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value is <c>null</c> or an empty string.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsNotNullOrWhiteSpace``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value is not <c>null</c> or consists only of white space.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsNullOrWhiteSpace``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value is <c>null</c> or consists only of white space.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultByteNumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a byte.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsByte``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Byte"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Byte"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsByte``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Byte"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Byte"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultSByteNumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a sbyte.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsSByte``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.SByte"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Byte"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsSByte``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.SByte"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Byte"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsChar``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Char"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The only character of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultInt16NumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a short.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsInt16``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Int16"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Int16"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsInt16``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Int16"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Int16"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultInt32NumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse an int.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsInt32``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Int32"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Int32"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsInt32``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Int32"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Int32"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultInt64NumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a long.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsInt64``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Int64"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Int64"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsInt64``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Int64"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Int64"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultSingleNumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a float.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsSingle``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Single"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Single"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsSingle``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Single"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Single"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultDoubleNumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a float.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsDouble``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Double"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Double"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsDouble``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Double"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Double"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringConstraints.DefaultDecimalNumberStyles">
            <summary>
            Defines the default <see cref="T:System.Globalization.NumberStyles" /> value to parse a float.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsDecimal``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Decimal"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.IsDecimal``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Globalization.NumberStyles,System.IFormatProvider,System.String)">
            <summary>
            Verifies that the <paramref name="member"/>'s value can be converted to a <see cref="T:System.Decimal"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="style">
            A bitwise combination of enumeration values that indicates the style elements that can be present
            in the <paramref name="member"/>'s value.
            </param>
            <param name="formatProvider">
            An object that supplies culture-specific formatting information about the <paramref name="member"/>'s value.
            </param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The <see cref="T:System.Decimal"/> representation of the string.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotMatch``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not match the specified <paramref name="pattern"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="pattern">The pattern to match.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="pattern"/> is not a valid regular expression, or <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotMatch``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.Text.RegularExpressions.RegexOptions,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not match the specified <paramref name="pattern"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="pattern">The pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="pattern"/> is not a valid regular expression, or <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotMatch``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not match the specified <paramref name="pattern"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="pattern">The pattern to match.</param>        
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.Matches``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value matches the specified <paramref name="pattern"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="pattern">The pattern to match.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="pattern"/> is not a valid regular expression, or <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.Matches``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.Text.RegularExpressions.RegexOptions,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value matches the specified <paramref name="pattern"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="pattern">The pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="pattern"/> is not a valid regular expression, or <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.Matches``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value matches the specified <paramref name="pattern"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="pattern">The pattern to match.</param>       
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotStartWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not start with the specified <paramref name="prefix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="prefix">The prefix this value should not start with.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="prefix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.DoesNotStartWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.StringComparison,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value does not start with the specified <paramref name="prefix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="prefix">The prefix this value should not start with.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="prefix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.StartsWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value starts with the specified <paramref name="prefix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="prefix">The prefix this value should start with.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="prefix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringConstraints.StartsWith``1(Kingo.Messaging.Validation.IMemberConstraintBuilder{``0,System.String},System.String,System.StringComparison,System.String)">
            <summary>
            Verifies that the <paramref name="member" />'s value starts with the specified <paramref name="prefix"/>.
            </summary>
            <param name="member">A member.</param>
            <param name="prefix">The prefix this value should start with.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <param name="errorMessage">
            The error message that is added to a <see cref="T:Kingo.Messaging.Validation.IErrorMessageCollection" /> when verification fails.
            </param>
            <returns>The specified <paramref name="member"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="member"/> or <paramref name="prefix"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="errorMessage"/> is not in a correct format.
            </exception>
        </member>
        <member name="T:Kingo.Messaging.Validation.StringContainsConstraint">
            <summary>
            Represents a constraint that checks whether or not a string contains a certain value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringContainsConstraint.Value">
            <summary>
            The value to check for.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringContainsConstraint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringContainsConstraint" /> class.
            </summary>    
            <param name="value">The value to check for.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringContainsConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringContainsConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringContainsConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringContainsConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringContainsConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringEndsWithConstraint">
            <summary>
            Represents a constraint that checks whether or not a <see cref="T:System.String" /> ends with a certain value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringEndsWithConstraint.Postfix">
            <summary>
            The postfix the value should end with.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringEndsWithConstraint.CompareType">
            <summary>
            One of the enumeration values that specifies how the strings will be compared.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringEndsWithConstraint.#ctor(System.String,System.StringComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringEndsWithConstraint" /> class.
            </summary>    
            <param name="postfix">The prefix the value should end with.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="postfix"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringEndsWithConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringEndsWithConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringEndsWithConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringEndsWithConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringEndsWithConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsNotEqualToConstraint">
            <summary>
            Represents a constraint that checks whether or not a string is equal to another string.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.Other">
            <summary>
            The value to compare.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.CompareType">
            <summary>
            One of the enumeration values that specifies how the strings will be compared.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.#ctor(System.String,System.StringComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsNotEqualToConstraint" /> class.
            </summary>    
            <param name="other">The value to compare.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotEqualToConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsEqualToConstraint">
            <summary>
            Represents a constraint that checks whether or not a string is equal to another string.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringIsEqualToConstraint.Other">
            <summary>
            The value to compare.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringIsEqualToConstraint.CompareType">
            <summary>
            One of the enumeration values that specifies how the strings will be compared.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsEqualToConstraint.#ctor(System.String,System.StringComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsEqualToConstraint" /> class.
            </summary>    
            <param name="other">The value to compare.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsEqualToConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsEqualToConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsEqualToConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsEqualToConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsEqualToConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsIdentifierFilter">
            <summary>
            Represents a filter that transforms a string into an <see cref="T:Kingo.Messaging.Validation.Identifier" />.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsIdentifierFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsIdentifierFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsIdentifierFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsIdentifierFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsIdentifierFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsIdentifierFilter.IsSatisfiedBy(System.String,Kingo.Messaging.Validation.Identifier@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint">
            <summary>
            Represents a constraint that checks whether or not a string is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrEmptyConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint">
            <summary>
            Represents a constraint that checks whether or not a string is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrEmptyConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint">
            <summary>
            Represents a constraint that checks whether or not a string is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNotNullOrWhiteSpaceConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint">
            <summary>
            Represents a constraint that checks whether or not a string is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNullOrWhiteSpaceConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsNumberFilter`1">
            <summary>
            Represents a filter that transforms a string into a number.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringIsNumberFilter`1.Style">
            <summary>
            A bitwise combination of enumeration values that indicates the style elements that can be present in the value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringIsNumberFilter`1.FormatProvider">
            <summary>
            An object that supplies culture-specific formatting information about the value.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsNumberFilter`1.IsSatisfiedBy(System.String,`0@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsByteFilter">
            <summary>
            Represents a filter that transforms a string into a byte.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsByteFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsByteFilter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsByteFilter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsByteFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsByteFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsByteFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsByteFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsSByteFilter">
            <summary>
            Represents a filter that transforms a string into an sbyte.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSByteFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsSByteFilter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSByteFilter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsSByteFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsSByteFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSByteFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSByteFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsCharFilter">
            <summary>
            Represents a filter that transforms a string into a character.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsCharFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsCharFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsCharFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsCharFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsCharFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsCharFilter.IsSatisfiedBy(System.String,System.Char@)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsInt16Filter">
            <summary>
            Represents a filter that transforms a string into a short.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt16Filter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsInt16Filter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt16Filter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsInt16Filter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsInt16Filter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt16Filter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt16Filter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsInt32Filter">
            <summary>
            Represents a filter that transforms a string into an int.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt32Filter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsInt32Filter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt32Filter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsInt32Filter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsInt32Filter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt32Filter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt32Filter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsInt64Filter">
            <summary>
            Represents a filter that transforms a string into a long.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt64Filter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsInt64Filter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt64Filter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsInt64Filter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsInt64Filter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt64Filter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsInt64Filter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsSingleFilter">
            <summary>
            Represents a filter that transforms a string into a float.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSingleFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsSingleFilter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSingleFilter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsSingleFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsSingleFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSingleFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsSingleFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsDoubleFilter">
            <summary>
            Represents a filter that transforms a string into a double.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDoubleFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsDoubleFilter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDoubleFilter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsDoubleFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsDoubleFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDoubleFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDoubleFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringIsDecimalFilter">
            <summary>
            Represents a filter that transforms a string into a decimal.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDecimalFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsDecimalFilter" /> class.
            </summary>    
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDecimalFilter.#ctor(System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringIsDecimalFilter" /> class.
            </summary>    
        </member>
        <member name="P:Kingo.Messaging.Validation.StringIsDecimalFilter.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDecimalFilter.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringIsDecimalFilter.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringMatchesConstraint">
            <summary>
            Represents a constraint that checks whether or not a string matches a specified pattern.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringMatchesConstraint.Pattern">
            <summary>
            The pattern to match.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringMatchesConstraint.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringMatchesConstraint" /> class.
            </summary>    
            <param name="pattern">The pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values that provide options for matching.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="pattern"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="pattern"/> is not a valid regular expression.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringMatchesConstraint.#ctor(System.Text.RegularExpressions.Regex)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringMatchesConstraint" /> class.
            </summary>
            <param name="pattern">The pattern to match.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="pattern"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringMatchesConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringMatchesConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringMatchesConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringMatchesConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringMatchesConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringStartsWithConstraint">
            <summary>
            Represents a constraint that checks whether or not a <see cref="T:System.String" /> starts with a certain value.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringStartsWithConstraint.Prefix">
            <summary>
            The prefix the value should start with.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringStartsWithConstraint.CompareType">
            <summary>
            One of the enumeration values that specifies how the strings will be compared.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringStartsWithConstraint.#ctor(System.String,System.StringComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:Kingo.Messaging.Validation.StringStartsWithConstraint" /> class.
            </summary>    
            <param name="prefix">The prefix the value should start with.</param>
            <param name="compareType">One of the enumeration values that specifies how the strings will be compared.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="prefix"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringStartsWithConstraint.ErrorMessageIfNotSpecified">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringStartsWithConstraint.WithName(Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringStartsWithConstraint.WithErrorMessage(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringStartsWithConstraint.Invert(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.Identifier)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringStartsWithConstraint.IsSatisfiedBy(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Kingo.Messaging.Validation.StringTemplate">
            <summary>
            Represents a format string that can contain placeholder values that are identified by an instance name.
            </summary>
        </member>
        <member name="F:Kingo.Messaging.Validation.StringTemplate.NullValue">
            <summary>
            The value that is used in templates to represent the <c>null</c>-value.
            </summary>
        </member>
        <member name="P:Kingo.Messaging.Validation.StringTemplate.LiteralCount">
            <summary>
            Returns the amount of literal characters in this template.
            </summary>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Equals(Kingo.Messaging.Validation.StringTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Format(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Kingo.Messaging.Validation.Identifier,System.Object}},System.IFormatProvider)">
            <summary>
            Replaces all placeholders of this template with the argument-values that are specified in the collection.
            </summary>
            <param name="arguments">A collection of arguments.</param>
            <param name="formatProvider">Optional <see cref="T:System.IFormatProvider" /> that is used for placeholders that define a specific format.</param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.StringTemplate" /> that has replaced all matching placeholder with their values.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="arguments"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Replaces all placeholders of the specified <paramref name="identifier"/> with the value of <paramref name="argument"/>.
            </summary>
            <param name="identifier">Identifier of the placeholder.</param>
            <param name="argument">Value of the placeholder.</param>
            <param name="formatProvider">Optional <see cref="T:System.IFormatProvider" /> that is used for placeholders that define a specific format.</param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.StringTemplate" /> that has replaced all matching placeholder with their values.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="identifier"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="identifier"/> is not a valid identifier.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Format(Kingo.Messaging.Validation.Identifier,System.Object,System.IFormatProvider)">
            <summary>
            Replaces all placeholders of the specified <paramref name="identifier"/> with the value of <paramref name="argument"/>.
            </summary>
            <param name="identifier">Identifier of the placeholder.</param>
            <param name="argument">Value of the placeholder.</param>
            <param name="formatProvider">Optional <see cref="T:System.IFormatProvider" /> that is used for placeholders that define a specific format.</param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.StringTemplate" /> that has replaced all matching placeholder with their values.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="identifier"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.ToString">
            <inheritdoc />
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Concat(System.String)">
            <summary>
            Concatenates this template with another template.
            </summary>
            <param name="template">The template to concatenate.</param>
            <returns>The concatenated template.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Concat(Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Concatenates this template with another template.
            </summary>
            <param name="template">The template to concatenate.</param>
            <returns>The concatenated template.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.op_Addition(Kingo.Messaging.Validation.StringTemplate,System.String)">
            <summary>
            Returns the concatenation of <paramref name="left"/> and <paramref name="right"/>.
            </summary>
            <param name="left">Left template.</param>
            <param name="right">Right template.</param>
            <returns>The concatenated template.</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="right"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.op_Addition(Kingo.Messaging.Validation.StringTemplate,Kingo.Messaging.Validation.StringTemplate)">
            <summary>
            Returns the concatenation of <paramref name="left"/> and <paramref name="right"/>.
            </summary>
            <param name="left">Left template.</param>
            <param name="right">Right template.</param>
            <returns>The concatenated template.</returns>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.ParseOrNull(System.String)">
            <summary>
            Parses the specified <paramref name="templateFormat"/> such that it can be formatted using arbitrary arguments.
            </summary>
            <param name="templateFormat">The format string to parse.</param>
            <returns><c>null</c> if <paramref name="templateFormat"/> is <c>null</c>; otherwise a parsed format string.</returns>        
            <exception cref="T:System.ArgumentException">
            <paramref name="templateFormat"/> is not in a correct format.
            </exception>
        </member>
        <member name="M:Kingo.Messaging.Validation.StringTemplate.Parse(System.String)">
            <summary>
            Parses the specified <paramref name="templateFormat"/> such that it can be formatted using arbitrary arguments.
            </summary>
            <param name="templateFormat">The format string to parse.</param>
            <returns>A new <see cref="T:Kingo.Messaging.Validation.StringTemplate" /> instance.</returns> 
            <exception cref="T:System.ArgumentNullException">
            <paramref name="templateFormat"/> is <c>null</c>.
            </exception>       
            <exception cref="T:System.ArgumentException">
            <paramref name="templateFormat"/> is not in a correct format.
            </exception>
        </member>
        <member name="T:Kingo.Resources.ErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_Default">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) is not valid..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsEqualTo">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be equal to &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsGreaterThan">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be greater than &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be greater than or equal to &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsInRange">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be within the following range: {constraint.Range}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsInstanceOf">
            <summary>
              Looks up a localized string similar to {member} of type &apos;{member.Type.FullName}&apos; must be an instance of type &apos;{constraint.Type.FullName}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsNotEqualTo">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not be equal to &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsNotInRange">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not be within the following range: {constraint.Range}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsNotInstanceOf">
            <summary>
              Looks up a localized string similar to {member} of type &apos;{member.Type.FullName}&apos; must not be an instance of type &apos;{constraint.Type.FullName}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsNotNull">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must refer to an instance of an object..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsNotSameInstanceAs">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not refer to the same instance as &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsNull">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be null..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsSameInstanceAs">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must refer to the same instance as &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsSmallerThan">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be smaller than &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_IsSmallerThanOrEqualTo">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be smaller than or equal to &apos;{constraint.Other}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BasicConstraints_MultipleConstraintsFailed">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) did not satisfy the following constraint: &apos;{constraint}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BooleanConstraints_IsFalse">
            <summary>
              Looks up a localized string similar to {member} (true) must be false..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.BooleanConstraints_IsTrue">
            <summary>
              Looks up a localized string similar to {member} (false) must be true..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.CollectionConstraints_HasItem">
            <summary>
              Looks up a localized string similar to {member} ({member.Value.Count} item(s)) contains no element at key or index {constraint.IndexList}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.CollectionConstraints_HasNoItem">
            <summary>
              Looks up a localized string similar to {member} ({member.Value.Count} item(s)) does contain an element at {constraint.IndexList}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.CollectionConstraints_IsNotNullOrEmpty">
            <summary>
              Looks up a localized string similar to {member} must not be null and contain at least one element..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.CollectionConstraints_IsNullOrEmpty">
            <summary>
              Looks up a localized string similar to {member} ({member.Value.Count} item(s)) must be null or empty..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.EnumConstraints_HasFlag">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) does not have all bitflags specified by &apos;{constraint.Flag}&apos; set..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.EnumConstraints_IsDefined">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) is not defined in Enum of type {constraint.EnumType.Name}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.EnumConstraints_IsInRangeOfValidValues">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) has a value or contains bitflags that are not defined by type {constraint.EnumType.Name}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.GuidConstraints_IsEmpty">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be empty..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.GuidConstraints_IsNotEmpty">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not be empty..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.ListConstraints_ElementAt">
            <summary>
              Looks up a localized string similar to {member} ({member.Value.Count} item(s)) contains no element at index {constraint.Index}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.NullableConstraints_HasValue">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must have a value..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_Contains">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must contain &apos;{constraint.Value}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_DoesNotContain">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not contain &apos;{constraint.Value}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_DoesNotEndWith">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not end with &apos;{constraint.Postfix}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_DoesNotMatch">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not match pattern &apos;{constraint.Pattern}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_DoesNotStartWith">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must not start with &apos;{constraint.Prefix}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_EndsWith">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must end with &apos;{constraint.Postfix}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsByte">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a byte..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsChar">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a single character..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsDecimal">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a 96-bit floating point number..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsDouble">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a 64-bit floating point number..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsIdentifier">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to an identifier..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsInt16">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a 16-bit integer..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsInt32">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a 32-bit integer..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsInt64">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a 64-bit integer..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsSByte">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a signed byte..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_IsSingle">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) could not be converted to a 32-bit floating point number..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_Matches">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must match pattern &apos;{constraint.Pattern}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_NotNullOrEmpty">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) is not allowed to be null or empty..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_NotNullOrWhiteSpace">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) is not allowed to be null or contain only white space..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_NullOrEmpty">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be either null or empty..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_NullOrWhiteSpace">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must be either null or contain only white space..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ErrorMessages.StringConstraints_StartsWith">
            <summary>
              Looks up a localized string similar to {member} ({member.Value}) must start with &apos;{constraint.Prefix}&apos;..
            </summary>
        </member>
        <member name="T:Kingo.Resources.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.Constraint_WithErrorMessageNotSupported">
            <summary>
              Looks up a localized string similar to WithErrorMessage is not supported by constraint &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.Constraint_WithNameNotSupported">
            <summary>
              Looks up a localized string similar to WithName is not supported by constraint &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.EnumIsInRangeOfValidValues_UnsupportedValue">
            <summary>
              Looks up a localized string similar to Instance &apos;{0}&apos; of type &apos;{1}&apos; is not supported because it is not an Enum type..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.ExpressionBuilder_ExpressionNotSupported">
            <summary>
              Looks up a localized string similar to The specified node or expression is not supported inside a member expression: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.HasItemFilter_IndexerNotFound">
            <summary>
              Looks up a localized string similar to Instance of type &apos;{0}&apos; does not contain an indexer with argument types &apos;[{1}]&apos;..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.HasItemFilter_InvalidArrayIndexValues">
            <summary>
              Looks up a localized string similar to The specified values are not valid to index an array: {0}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.Range_InvalidRange">
            <summary>
              Looks up a localized string similar to The specified range is not valid: {0}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.StringTemplate_MissingClosingBrace">
            <summary>
              Looks up a localized string similar to Invalid format string specified: &apos;{0}&apos;. Missing closing brace of variable at index {1}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.StringTemplate_MissingIdentifier">
            <summary>
              Looks up a localized string similar to Invalid format string specified: &apos;{0}&apos;. Missing identifier at index {1}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.StringTemplate_UnexpectedCharacter">
            <summary>
              Looks up a localized string similar to Invalid format string specified: &apos;{0}&apos;. Unexpected character &apos;{1}&apos; at index {2}..
            </summary>
        </member>
        <member name="P:Kingo.Resources.ExceptionMessages.StringTemplateVariable_MemberNotFound">
            <summary>
              Looks up a localized string similar to Instance of type &apos;{0}&apos; does not contain public field or property &apos;{1}&apos;..
            </summary>
        </member>
    </members>
</doc>
