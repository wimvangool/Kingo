//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceComponents.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ServiceComponents.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid count specified: {0}. Value cannot be negative..
        /// </summary>
        internal static string CountLoadedEventArgs_InvalidCount {
            get {
                return ResourceManager.GetString("CountLoadedEventArgs_InvalidCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid count specified: {0}. Value cannot be less than or equal to zero..
        /// </summary>
        internal static string ErrorItemRange_InvalidCount {
            get {
                return ResourceManager.GetString("ErrorItemRange_InvalidCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove any values from this because it&apos;s size is already at it&apos;s minimum (1)..
        /// </summary>
        internal static string IndexRange_CountAlreadyAtMinimum {
            get {
                return ResourceManager.GetString("IndexRange_CountAlreadyAtMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add index to the right of this range because MaxValue is already at it&apos;s maximum (Int32.MaxValue)..
        /// </summary>
        internal static string IndexRange_MaxValueAlreadyAtMaximum {
            get {
                return ResourceManager.GetString("IndexRange_MaxValueAlreadyAtMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of &apos;{0}&apos; ({1}) is invalid because it would cause MaxValue to exceed Int32.MaxValue..
        /// </summary>
        internal static string IndexRange_MaxValueOverflow {
            get {
                return ResourceManager.GetString("IndexRange_MaxValueOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add index to the left of this range because MinValue is already at it&apos;s minimum (0)..
        /// </summary>
        internal static string IndexRange_MinValueAlreadyAtMinimum {
            get {
                return ResourceManager.GetString("IndexRange_MinValueAlreadyAtMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified index was out of range of valid values: {0}..
        /// </summary>
        internal static string Object_IndexOutOfRange {
            get {
                return ResourceManager.GetString("Object_IndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open connection because another command has already opened its connection..
        /// </summary>
        internal static string OneToOneCommand_OtherAlreadyConnected {
            get {
                return ResourceManager.GetString("OneToOneCommand_OtherAlreadyConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method or property &apos;{0}&apos; is not supported because the collection is read-only..
        /// </summary>
        internal static string ReadOnlyCollection_MethodNotSupported {
            get {
                return ResourceManager.GetString("ReadOnlyCollection_MethodNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the item because the size of the collection has not yet been determined..
        /// </summary>
        internal static string VirtualCollectionImplementation_CountNotLoaded {
            get {
                return ResourceManager.GetString("VirtualCollectionImplementation_CountNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified page-index is not valid: {0}..
        /// </summary>
        internal static string VirtualCollectionImplementation_InvalidPageIndex {
            get {
                return ResourceManager.GetString("VirtualCollectionImplementation_InvalidPageIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid page size specified: {0}. Value must be greater than zero..
        /// </summary>
        internal static string VirtualCollectionImplementation_InvalidPageSize {
            get {
                return ResourceManager.GetString("VirtualCollectionImplementation_InvalidPageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error: page &apos;{0}&apos; was already cached..
        /// </summary>
        internal static string VirtualCollectionImplementation_PageAlreadyInCache {
            get {
                return ResourceManager.GetString("VirtualCollectionImplementation_PageAlreadyInCache", resourceCulture);
            }
        }
    }
}
