<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BooleanConstraints_IsFalse" xml:space="preserve">
    <value>{member.FullName} (true) must be false.</value>
  </data>
  <data name="BooleanConstraints_IsTrue" xml:space="preserve">
    <value>{member.FullName} (false) must be true.</value>
  </data>
  <data name="CollectionConstraints_IsNotNullOrEmpty" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not be null and contain at least one element.</value>
  </data>
  <data name="CollectionConstraints_ElementAt" xml:space="preserve">
    <value>{member.FullName} ({member.Value.Count} item(s)) contains no element at index {constraint.Index}.</value>
  </data>
  <data name="CollectionConstraints_IsNullOrEmpty" xml:space="preserve">
    <value>{member.FullName} ({member.Value.Count} item(s)) must be null or empty.</value>
  </data>
  <data name="GuidConstraints_IsEmpty" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be empty.</value>
  </data>
  <data name="GuidConstraints_IsNotEmpty" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not be empty.</value>
  </data>
  <data name="ListConstraints_ElementAt" xml:space="preserve">
    <value>{member.FullName} ({member.Value.Count} item(s)) contains no element at index {constraint.Index}.</value>
  </data>
  <data name="BasicConstraints_Default" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) is not valid.</value>
  </data>
  <data name="BasicConstraints_IsEqualTo" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be equal to '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsGreaterThan" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be greater than '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsGreaterThanOrEqualTo" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be greater than or equal to '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsInRange" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be within the following range: {constraint.Range}.</value>
  </data>
  <data name="BasicConstraints_IsInstanceOf" xml:space="preserve">
    <value>{member.FullName} of type '{member.Type.FullName}' must be an instance of type '{constraint.Type.FullName}'.</value>
  </data>
  <data name="BasicConstraints_IsNotEqualTo" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not be equal to '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsNotInRange" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not be within the following range: {constraint.Range}.</value>
  </data>
  <data name="BasicConstraints_IsNotInstanceOf" xml:space="preserve">
    <value>{member.FullName} of type '{member.Type.FullName}' must not be an instance of type '{constraint.Type.FullName}'.</value>
  </data>
  <data name="BasicConstraints_IsNotNull" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must refer to an instance of an object.</value>
  </data>
  <data name="BasicConstraints_IsNotSameInstanceAs" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not refer to the same instance as '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsNull" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be null.</value>
  </data>
  <data name="BasicConstraints_IsSameInstanceAs" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must refer to the same instance as '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsSmallerThan" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be smaller than '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_IsSmallerThanOrEqualTo" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be smaller than or equal to '{constraint.Other}'.</value>
  </data>
  <data name="BasicConstraints_MultipleConstraintsFailed" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) did not satisfy the following constraint: '{constraint}'.</value>
  </data>
  <data name="NullableConstraints_HasValue" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must have a value.</value>
  </data>
  <data name="StringConstraints_Contains" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must contain '{constraint.Value}'.</value>
  </data>
  <data name="StringConstraints_DoesNotContain" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not contain '{constraint.Value}'.</value>
  </data>
  <data name="StringConstraints_DoesNotEndWith" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not end with '{constraint.Postfix}'.</value>
  </data>
  <data name="StringConstraints_DoesNotMatch" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not match pattern '{constraint.Pattern}'.</value>
  </data>
  <data name="StringConstraints_DoesNotStartWith" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must not start with '{constraint.Prefix}'.</value>
  </data>
  <data name="StringConstraints_EndsWith" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must end with '{constraint.Postfix}'.</value>
  </data>
  <data name="StringConstraints_IsByte" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a byte.</value>
  </data>
  <data name="StringConstraints_IsChar" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a single character.</value>
  </data>
  <data name="StringConstraints_IsDecimal" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a 96-bit floating point number.</value>
  </data>
  <data name="StringConstraints_IsDouble" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a 64-bit floating point number.</value>
  </data>
  <data name="StringConstraints_IsInt16" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a 16-bit integer.</value>
  </data>
  <data name="StringConstraints_IsInt32" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a 32-bit integer.</value>
  </data>
  <data name="StringConstraints_IsInt64" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a 64-bit integer.</value>
  </data>
  <data name="StringConstraints_IsSByte" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a signed byte.</value>
  </data>
  <data name="StringConstraints_IsSingle" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to a 32-bit floating point number.</value>
  </data>
  <data name="StringConstraints_Matches" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must match pattern '{constraint.Pattern}'.</value>
  </data>
  <data name="StringConstraints_NotNullOrEmpty" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) is not allowed to be null or empty.</value>
  </data>
  <data name="StringConstraints_NotNullOrWhiteSpace" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) is not allowed to be null or contain only white space.</value>
  </data>
  <data name="StringConstraints_NullOrEmpty" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be either null or empty.</value>
  </data>
  <data name="StringConstraints_NullOrWhiteSpace" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must be either null or contain only white space.</value>
  </data>
  <data name="StringConstraints_StartsWith" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) must start with '{constraint.Prefix}'.</value>
  </data>
  <data name="CollectionConstraints_NoElementAt" xml:space="preserve">
    <value>{member.FullName} ({member.Value.Count} item(s)) does contain an element index {constraint.Index}.</value>
  </data>
  <data name="StringConstraints_IsIdentifier" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) could not be converted to an identifier.</value>
  </data>
  <data name="EnumConstraints_HasFlag" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) does not have all bitflags specified by '{constraint.Flag}' set.</value>
  </data>
  <data name="EnumConstraints_IsDefined" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) is not defined in Enum of type {constraint.EnumType.Name}.</value>
  </data>
  <data name="EnumConstraints_IsInRangeOfValidValues" xml:space="preserve">
    <value>{member.FullName} ({member.Value}) has a value or contains bitflags that are not defined by type {constraint.EnumType.Name}.</value>
  </data>
  <data name="CollectionConstraints_ElementAt_Dictionary" xml:space="preserve">
    <value>{member.FullName} ({member.Value.Count} item(s)) contains no element with key '{constraint.Key}'.</value>
  </data>
  <data name="CollectionConstraints_NoElementAt_Dictionary" xml:space="preserve">
    <value>{member.FullName} ({member.Value.Count} item(s)) does contain an element with key '{constraint.Key}'.</value>
  </data>
</root>