//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YellowFlare.MessageProcessing.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("YellowFlare.MessageProcessing.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown value of type &apos;{0}&apos; specified: {1}..
        /// </summary>
        internal static string Message_InvalidOption {
            get {
                return ResourceManager.GetString("Message_InvalidOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot mark message &apos;{0}&apos; as changed because it is marked readonly..
        /// </summary>
        internal static string Message_IsReadOnly {
            get {
                return ResourceManager.GetString("Message_IsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple attributes of the specified type were found when only a single was expected: {0}..
        /// </summary>
        internal static string MessageHanderPipeline_MultipleAttributesFound {
            get {
                return ResourceManager.GetString("MessageHanderPipeline_MultipleAttributesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid InstanceLifetime was specified on class &apos;{0}&apos;: {1}. .
        /// </summary>
        internal static string MessageHandlerClass_InvalidInstanceLifetimeMode {
            get {
                return ResourceManager.GetString("MessageHandlerClass_InvalidInstanceLifetimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method is not supported because the factory required to instantiate the appropriate MessageHandlers was not set..
        /// </summary>
        internal static string MessageProcessor_FactoryNotSet {
            get {
                return ResourceManager.GetString("MessageProcessor_FactoryNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot start this lifetime because it has been already started once..
        /// </summary>
        internal static string QueryCacheValueLifetime_AlreadyStarted {
            get {
                return ResourceManager.GetString("QueryCacheValueLifetime_AlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot combine this lifetime with the other because the other has already started..
        /// </summary>
        internal static string QueryCacheValueLifetime_OtherAlreadyStarted {
            get {
                return ResourceManager.GetString("QueryCacheValueLifetime_OtherAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot combine this lifetime with another because it has already started..
        /// </summary>
        internal static string QueryCacheValueLifetime_ThisAlreadyStarted {
            get {
                return ResourceManager.GetString("QueryCacheValueLifetime_ThisAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of a lifetime cannot be zero..
        /// </summary>
        internal static string TimerBasedLifetime_ZeroLifetime {
            get {
                return ResourceManager.GetString("TimerBasedLifetime_ZeroLifetime", resourceCulture);
            }
        }
    }
}
