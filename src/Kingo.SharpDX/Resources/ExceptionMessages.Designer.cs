//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kingo.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Kingo.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width and height must be non-zero values..
        /// </summary>
        internal static string AspectRatio_InvalidLength {
            get {
                return ResourceManager.GetString("AspectRatio_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already in Non-Rendering State..
        /// </summary>
        internal static string DirectXImage_AlreadyNonRendering {
            get {
                return ResourceManager.GetString("DirectXImage_AlreadyNonRendering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already in Rendering State..
        /// </summary>
        internal static string DirectXImage_AlreadyRendering {
            get {
                return ResourceManager.GetString("DirectXImage_AlreadyRendering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has already been initialized..
        /// </summary>
        internal static string DirectXRenderingComponent_AlreadyInitialized {
            get {
                return ResourceManager.GetString("DirectXRenderingComponent_AlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has not been initialized..
        /// </summary>
        internal static string DirectXRenderingComponent_NotInitialized {
            get {
                return ResourceManager.GetString("DirectXRenderingComponent_NotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Angle ({0}) must be within the range of &lt;{1}, {2}&gt;..
        /// </summary>
        internal static string FieldOfVision_InvalidAngle {
            get {
                return ResourceManager.GetString("FieldOfVision_InvalidAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length ({0}) cannot be negative..
        /// </summary>
        internal static string Length_ValueCannotBeNegative {
            get {
                return ResourceManager.GetString("Length_ValueCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScreenSize ({0}) must have non-zero dimensions..
        /// </summary>
        internal static string OrthogonalCamera_InvalidScreenSize {
            get {
                return ResourceManager.GetString("OrthogonalCamera_InvalidScreenSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Near Plane ({0}) must be smaller than the Far Plane ({1})..
        /// </summary>
        internal static string ProjectionPlanes_NearPlaneTooLarge {
            get {
                return ResourceManager.GetString("ProjectionPlanes_NearPlaneTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Near Plane distance must be greater than 0..
        /// </summary>
        internal static string ProjectionPlanes_NearPlaneZero {
            get {
                return ResourceManager.GetString("ProjectionPlanes_NearPlaneZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid ScaleFactor specified ({0}). Value must be greater than 0..
        /// </summary>
        internal static string ScaleFactor_InvalidValue {
            get {
                return ResourceManager.GetString("ScaleFactor_InvalidValue", resourceCulture);
            }
        }
    }
}
