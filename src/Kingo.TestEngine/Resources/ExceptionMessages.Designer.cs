//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kingo.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Kingo.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pick a value of type &apos;{0}&apos; because the specified collection is empty..
        /// </summary>
        internal static string Scenario_EmptyCollectionSpecified {
            get {
                return ResourceManager.GetString("Scenario_EmptyCollectionSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the expectation for exception of type &apos;{0}&apos; because another expectation has already been set..
        /// </summary>
        internal static string Scenario_ExceptionExpectationAlreadySet {
            get {
                return ResourceManager.GetString("Scenario_ExceptionExpectationAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected exception was not thrown..
        /// </summary>
        internal static string Scenario_ExpectedExceptionNotThrown {
            get {
                return ResourceManager.GetString("Scenario_ExpectedExceptionNotThrown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception of type &apos;{0}&apos; was thrown during the Given()-phase of scenario &apos;{1}&apos;: {2}..
        /// </summary>
        internal static string Scenario_GivenFailed {
            get {
                return ResourceManager.GetString("Scenario_GivenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid mode has been set for scenario &apos;{0}&apos;: {1}..
        /// </summary>
        internal static string Scenario_InvalidMode {
            get {
                return ResourceManager.GetString("Scenario_InvalidMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scenario &apos;{0}&apos; did not publish an event at index &apos;{1}&apos;. Did you forget to put this scenario in the Given()-method of the current scenario?.
        /// </summary>
        internal static string Scenario_NoEventAtIndex {
            get {
                return ResourceManager.GetString("Scenario_NoEventAtIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of expected events ({0}) does not match the actual amount of published events ({1})..
        /// </summary>
        internal static string Scenario_UnexpectedEventCount {
            get {
                return ResourceManager.GetString("Scenario_UnexpectedEventCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instead, the following events were published: {0}..
        /// </summary>
        internal static string Scenario_UnexpectedEventsPublished {
            get {
                return ResourceManager.GetString("Scenario_UnexpectedEventsPublished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command &apos;{0}&apos; was invalid for test &apos;{1}&apos;: {2}..
        /// </summary>
        internal static string Test_InvalidCommand {
            get {
                return ResourceManager.GetString("Test_InvalidCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test &apos;{0}&apos; failed..
        /// </summary>
        internal static string TestEngine_TestFailed {
            get {
                return ResourceManager.GetString("TestEngine_TestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following values are missing: .
        /// </summary>
        internal static string TestSuiteCoverage_MissingPaths {
            get {
                return ResourceManager.GetString("TestSuiteCoverage_MissingPaths", resourceCulture);
            }
        }
    }
}
