<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AggregateRootDecorator_SnapshotsNotSupported" xml:space="preserve">
    <value>Aggregate of type '{0}' does not support snapshots.</value>
  </data>
  <data name="AggregateRoot_AggregateRemovedException" xml:space="preserve">
    <value>Aggregate of type '{0}' cannot publish event of type '{1}' because it has been removed from its repository and its lifetime has therefore ended.</value>
  </data>
  <data name="AggregateRoot_HandlerForEventTypeAlreadyAdded" xml:space="preserve">
    <value>Another handler for event of type '{0}' has already been added to this collection.</value>
  </data>
  <data name="AggregateRoot_InvalidEventId" xml:space="preserve">
    <value>Cannot apply event of type '{0}' because it's Id ({1}) does not match the aggregate's Id ({2}).</value>
  </data>
  <data name="AggregateRoot_MissingEventHandlerException" xml:space="preserve">
    <value>Missing event handler for event of type '{0}'.</value>
  </data>
  <data name="AggregateRoot_VersionUpdateException" xml:space="preserve">
    <value>The next version ({0}) must represent a newer version than the current version ({1}).</value>
  </data>
  <data name="AttributeProvider_AmbiguousAttributeMatch" xml:space="preserve">
    <value>Cannot obtain single attribute of type '{0}' declared on '{1}' because multiple attributes are of type '{0}'.</value>
  </data>
  <data name="ClaimsProvider_ClaimNotFound" xml:space="preserve">
    <value>User '{0}' must have claim '{1}'.</value>
  </data>
  <data name="Comparable_IncomparableType" xml:space="preserve">
    <value>The specified object of type '{0}' cannot be compared to instance of type '{1}'.</value>
  </data>
  <data name="Constraint_UnsupportedType" xml:space="preserve">
    <value>Cannot validate object of type '{0}': constraint '{1}' can only validate instances of type '{2}'.</value>
  </data>
  <data name="Context_IllegalScopeStarted" xml:space="preserve">
    <value>Cannot start this scope because a more restrive scope is still active.</value>
  </data>
  <data name="DateTimeSpan_InvalidTimeSpan" xml:space="preserve">
    <value>Invalid time span specified: [{0}, {1}].</value>
  </data>
  <data name="DateTimeSpan_TimeSpanZeroNotAllowed" xml:space="preserve">
    <value>'{0}' is not allowed to be zero.</value>
  </data>
  <data name="ErrorLevel_InvalidErrorLevel" xml:space="preserve">
    <value>ErrorLevel must be 0 or higher: {0}.</value>
  </data>
  <data name="ExecuteAsyncMethod_BadRequest" xml:space="preserve">
    <value>The query could not be executed because of a bad request. See inner exception for details.</value>
  </data>
  <data name="ExecuteAsyncMethod_InternalServerError" xml:space="preserve">
    <value>An error occurred while executing the query. See inner exception for details.</value>
  </data>
  <data name="ExpressionExtensions_UnsupportedExpression" xml:space="preserve">
    <value>Specified expression is not supported: '{0}'.</value>
  </data>
  <data name="HostedEndpoint_EndpointAlreadyStarted" xml:space="preserve">
    <value>Cannot start endpoint '{0}' because it has already been started. </value>
  </data>
  <data name="Identifier_EmptyIdentifier" xml:space="preserve">
    <value>Cannot create an empty identifier.</value>
  </data>
  <data name="Identifier_InvalidIdentifier" xml:space="preserve">
    <value>Invalid identifier specified: '{0}'.</value>
  </data>
  <data name="InternalServerErrorException_FromException" xml:space="preserve">
    <value>An error occurred while processing a message. See inner exception for details.</value>
  </data>
  <data name="MemoryDataStore_ConcurrencyConflict" xml:space="preserve">
    <value>Could not update aggregate with id '{0}' because its version in the repository ({1}) does not match the expected version ({2}) of the aggregate to be stored. The same aggregate may have been updated by another process.</value>
  </data>
  <data name="MessageHandlerClass_CouldNotResolveMessageHandler" xml:space="preserve">
    <value>'{0}' could not resolve message handler of type '{1}'.</value>
  </data>
  <data name="MessageHandlerFactoryBuilder_InvalidInstanceLifetime" xml:space="preserve">
    <value>Invalid InstanceLifetime specified: '{0}'.</value>
  </data>
  <data name="MessageHandlerFactoryStub_CannotResolveMessageHandler" xml:space="preserve">
    <value>Cannot create instance of type '{0}' because no MessageHandlerFactory has been defined for this processor. Please override method '{1}.{2}' to create and return a custom {3}.</value>
  </data>
  <data name="MessageValidationPipeline_InvalidMessage" xml:space="preserve">
    <value>Message of type '{0}' is not valid: {1}.</value>
  </data>
  <data name="MessageValidator_UnsupportedMessageType" xml:space="preserve">
    <value>Cannot validate message of type '{0}' because this validator only supports messages of type '{1}'.</value>
  </data>
  <data name="Message_AmbiguousAttributeMatch" xml:space="preserve">
    <value>Two or more attributes declared on message '{0}' are assignable to '{1}'.</value>
  </data>
  <data name="Message_ValidatorAlreadyRegisterd" xml:space="preserve">
    <value>Another validator for message of type '{0}' has already been registered.</value>
  </data>
  <data name="MethodAttributeProvider_InterfaceMethodNotFound" xml:space="preserve">
    <value>Could not find implementation of method '{0}.{1}({2})' on type '{3}'.</value>
  </data>
  <data name="MicroProcessorContextState_InvalidOperation" xml:space="preserve">
    <value>Invocation of method '{0}()' is not expected at this point.</value>
  </data>
  <data name="MicroProcessorPipelineFactoryBuilder_InvalidStage" xml:space="preserve">
    <value>Filter '{0}' specifies an invalid stage: {1}.</value>
  </data>
  <data name="NullCache_CacheNotSupported" xml:space="preserve">
    <value>Cache can only be used while a MicroProcessor is handling a message or executing a query.</value>
  </data>
  <data name="NullController_OperationNotSupported" xml:space="preserve">
    <value>Operation '{0}' is not supported at this point.</value>
  </data>
  <data name="NullStream_PublishNotSupported" xml:space="preserve">
    <value>Cannot publish event of type '{0}': events can only be published while a MicroProcessor is handling a message or executing a query.</value>
  </data>
  <data name="QueryContext_InvalidResult" xml:space="preserve">
    <value>The specified result ({0}) could not be converted to an instance of type '{1}'.</value>
  </data>
  <data name="ReadOnlyList_IndexOutOfRange" xml:space="preserve">
    <value>There is no element at index '{0}' (Count = {1}).</value>
  </data>
  <data name="Repository_AggregateNotFound" xml:space="preserve">
    <value>Aggregate of type '{0}' with Id '{1}' was not found.</value>
  </data>
  <data name="Repository_DuplicateKeyException_AggregateAlreadyExists" xml:space="preserve">
    <value>Cannot add aggregate of type '{0}' to the repository because another aggregate with Id '{1}' is already present in the data store.</value>
  </data>
  <data name="SchemaMap_TypeAlreadyMapped" xml:space="preserve">
    <value>Cannot add mapping for type '{0}' because it has already been mapped.</value>
  </data>
  <data name="SchemaMap_TypeIdAlreadyMapped" xml:space="preserve">
    <value>Cannot add mapping for type-id '{0}' because it has already been mapped.</value>
  </data>
  <data name="SchemaMap_TypeIdNotFound" xml:space="preserve">
    <value>Type-id that corresponds to type '{0}' not found.</value>
  </data>
  <data name="SchemaMap_TypeNotFound" xml:space="preserve">
    <value>Type that corresponds to type-id '{0}' not found.</value>
  </data>
  <data name="Scope_CannotCompleteScope" xml:space="preserve">
    <value>Cannot complete this scope because it is not the current scope.</value>
  </data>
  <data name="Scope_IncorrectNesting" xml:space="preserve">
    <value>The scopes were not nested correctly.</value>
  </data>
  <data name="Scope_ScopeAlreadyCompleted" xml:space="preserve">
    <value>The scope has already completed.</value>
  </data>
  <data name="SerializationStrategy_CouldNotRestoreAggregate" xml:space="preserve">
    <value>Could not restore aggregate of type '{0}' from the retrieved data-set. See inner exception for details.</value>
  </data>
  <data name="SerializationStrategy_InvalidEventsPerSnapshot" xml:space="preserve">
    <value>Invalid number of events per snapshot specified ({0}). Value cannot be negative.</value>
  </data>
  <data name="SerializationStrategy_MissingSnapshot" xml:space="preserve">
    <value>DataSet is missing the expected snapshot.</value>
  </data>
  <data name="SerializationStrategy_MissingSnapshotOrEvent" xml:space="preserve">
    <value>DataSet is missing the expected snapshot or event to restore the aggregate. </value>
  </data>
  <data name="SnapshotOrEvent_RestoreNotSupported" xml:space="preserve">
    <value>'{0}' cannot be used to restore an aggregate.</value>
  </data>
  <data name="UnitOfWork_EnlistmentTimeout" xml:space="preserve">
    <value>The operation to enlist to the current unit of work (as a result of modification of aggregate of type '{0}'), was aborted because execution time exceeded the specified timeout ({1}).</value>
  </data>
</root>