<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AsyncMethodOperationStackTrace_IndexOutOfRange" xml:space="preserve">
    <value>There is no element at index '{0}' (Count = {1}).</value>
  </data>
  <data name="EndpointNameFormat_IllegalCharacter" xml:space="preserve">
    <value>Name '{0}' contains illegal character '{1}' encountered at index '{2}'.</value>
  </data>
  <data name="EndpointNameFormat_MissingClosingBracket" xml:space="preserve">
    <value>Name '{0}' is missing the closing bracket for placeholder started at index '{1}'.</value>
  </data>
  <data name="EndpointNameFormat_UnknownPlaceholderName" xml:space="preserve">
    <value>Unknown placeholder specified: '{0}'.</value>
  </data>
  <data name="MessageBus_AlreadyCommitted" xml:space="preserve">
    <value>Cannot perform the operation at this point because the operation has already committed to its output.</value>
  </data>
  <data name="MessageBus_NegativeDelayNotAllowed" xml:space="preserve">
    <value>The specified delay ({0}) is not allowed to be negative.</value>
  </data>
  <data name="MessageFactoryBuilder_MappingForMessageTypeAlreadyExists" xml:space="preserve">
    <value>Another mapping for the specified message-type ({0}) already exists.</value>
  </data>
  <data name="MessageFactory_InvalidMessageDirection" xml:space="preserve">
    <value>The specified direction '{0}' is not valid.</value>
  </data>
  <data name="MessageFactory_InvalidMessageKind" xml:space="preserve">
    <value>The specified kind '{0}' is not valid.</value>
  </data>
  <data name="MessageHandlerClass_CouldNotResolveMessageHandler" xml:space="preserve">
    <value>Could not resolve message handler of type '{0}'.</value>
  </data>
  <data name="MessageHeader_IdNotSpecified" xml:space="preserve">
    <value>Cannot set the CorrelationId of a message ({0}) when the Id of the message has not been specified.</value>
  </data>
  <data name="MessageIdFactory_MultipleFactoriesAddedForSameMessageType" xml:space="preserve">
    <value>Cannot generate message-id for message of type '{0}' because multiple factories were configured for this message-type: {1}.</value>
  </data>
  <data name="MessageIdFormatter_PropertyIsAmbiguous" xml:space="preserve">
    <value>MessageId-property '{0}' has multiple candidates on message of type '{1}': {2}. Please make sure the type-hierarchy contains only a single public property with this name.</value>
  </data>
  <data name="MessageIdFormatter_PropertyNotFound" xml:space="preserve">
    <value>MessageId-property '{0}' was not found on message of type '{1}'.</value>
  </data>
  <data name="Message_ContentNotValid" xml:space="preserve">
    <value>Message with content of type '{0}' is not valid because its content has violated some validation-constraints ({1}).</value>
  </data>
  <data name="Message_ConversionFailed" xml:space="preserve">
    <value>Message with content of type '{0}' could not be converted to a message with content of type '{1}'.</value>
  </data>
  <data name="Message_MessageKindMismatch" xml:space="preserve">
    <value>Message with content of type '{0}' is not valid because its MessageKind ({1}) does not match the expected MessageKind ({2}).</value>
  </data>
  <data name="Message_UndefinedMessagesBlocked" xml:space="preserve">
    <value>Message with content of type '{0}' is not valid because its MessageKind is {1} and the processor has been configured to block these kinds of messages with direction '{2}'. Please specify the MessageKind of type '{0}' at the processor's configuration, or change the configuration to allow the processor to process these kinds of messages.</value>
  </data>
  <data name="MicroProcessorBuilder_InvalidProcessorType" xml:space="preserve">
    <value>Type '{0}' cannot be used as a MicroProcessor. Please provider a non-abstract, non-generic MicroProcessor-type.</value>
  </data>
  <data name="MicroProcessorComponentInterface_InterfaceMethodNotFound" xml:space="preserve">
    <value>Could not find implementation of method '{0}.{1}(...)' on type '{3}'.</value>
  </data>
  <data name="MicroProcessorComponent_InvalidComponentLifetime" xml:space="preserve">
    <value>Could not add component of type '{0}' to the service collection because it is configured with an unsupported lifetime ({1}) for this type.</value>
  </data>
  <data name="MicroProcessorComponent_TypeNotSupported" xml:space="preserve">
    <value>Cannot use instance of type '{0}' as a MicroProcessorComponent. Only non-abstract classes without generic parameters are supported.</value>
  </data>
  <data name="MicroProcessorEndpoint_UnuspportedMessageKind" xml:space="preserve">
    <value>The resolved message-kind ({0}) is not supported for endpoints. Make sure the message-type's ({1}) message-kind is correctly configured by use of the {2} or through by configuring the processor's {3}.</value>
  </data>
  <data name="MicroProcessorOperation_InternalServerError" xml:space="preserve">
    <value>A unexpected exception occurred. See inner exception for details.</value>
  </data>
  <data name="MicroProcessorOperation_OperationCancelled" xml:space="preserve">
    <value>The operation was cancelled, possibly due to a timeout.</value>
  </data>
  <data name="MicroProcessorOperation_OperationCancelledUnexpectedly" xml:space="preserve">
    <value>A certain operation was cancelled unexpectedly.</value>
  </data>
  <data name="MicroServiceBusClient_EndpointNotSupported" xml:space="preserve">
    <value>Cannot connect endpoint '{0}' (Name = {1}) to the service-bus because it is not supported by this client.</value>
  </data>
  <data name="MicroServiceBusController_AlreadyStarted" xml:space="preserve">
    <value>Controller of type '{0}' cannot be started because it has already been started.</value>
  </data>
  <data name="MicroServiceBusController_CannotPublishEvents" xml:space="preserve">
    <value>Controller of type '{0}' cannot publish the specified event(s) because it has not been (fully) started yet.</value>
  </data>
  <data name="MicroServiceBusController_CannotSendCommands" xml:space="preserve">
    <value>Controller of type '{0}' cannot send the specified command(s) because it has not been (fully) started yet.</value>
  </data>
  <data name="MicroServiceBusEndpoint_MessageNotOfSupportedType" xml:space="preserve">
    <value>Message of type '{0}' is not supported by endpoint '{1}'. This endpoint only supports messages that can be converted to an instance of type '{2}'.</value>
  </data>
  <data name="MicroServiceBus_CircularDependencyDetected" xml:space="preserve">
    <value>Cannot publish the specified event(s) inside the constructor of a type that is registered as a '{0}'-type, because this causes a circular reference.</value>
  </data>
  <data name="Repository_ItemNotFound" xml:space="preserve">
    <value>Item of type '{0}' with id '{1}' was not found.</value>
  </data>
  <data name="StoreAndForwardQueueResolver_CannotFindConstructor" xml:space="preserve">
    <value>Cannot resolve queue of type '{0}' because the resolver cannot find the appropriate constructor. Please make sure this type declares exactly one public constructor.</value>
  </data>
  <data name="StoreAndForwardQueueResolver_CircularDependencyDetected" xml:space="preserve">
    <value>Cannot resolve queue of type '{0}' because a circular dependency was detected in the pipeline.</value>
  </data>
  <data name="UnitOfWork_Disabled" xml:space="preserve">
    <value>Cannot enlist instance of type '{0}' because the unit of work controller has been disabled.</value>
  </data>
  <data name="UnitOfWork_InvalidMode" xml:space="preserve">
    <value>The specified mode is invalid: {0}.</value>
  </data>
</root>