<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kingo.MicroServices.Implementation.Endpoints.ServiceBus</name>
    </assembly>
    <members>
        <member name="T:Kingo.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Kingo.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Kingo.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Kingo.ExceptionMessages.HostedEndpoint_EndpointAlreadyStarted">
            <summary>
              Looks up a localized string similar to Cannot start endpoint &apos;{0}&apos; because it has already been started. .
            </summary>
        </member>
        <member name="T:Kingo.MicroServices.Controllers.MicroProcessorCollectionExtensions">
            <summary>
            Contains extensions methods for instances of type <see cref="T:Kingo.MicroServices.Controllers.MicroProcessorComponentCollection" />.
            </summary>
        </member>
        <member name="M:Kingo.MicroServices.Controllers.MicroProcessorCollectionExtensions.AddMicroServiceBusController``1(Kingo.MicroServices.Controllers.MicroProcessorComponentCollection,System.Boolean)">
            <summary>
            Adds <typeparamref name="TController"/> as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService" />.
            If <paramref name="isMainController"/> is <c>true</c>, the controller is also registered as
            a <see cref="T:Kingo.MicroServices.Controllers.IMicroServiceBus" />.
            </summary>
            <typeparam name="TController">The type to register as a controller.</typeparam>
            <param name="collection">A collection of components.</param>
            <param name="isMainController">
            Indicates whether or not the specified controller is owned by the current service.
            If <c>true</c>, the specified controller <typeparamref name="TController"/> will be registered
            as the <see cref="T:Kingo.MicroServices.Controllers.IMicroServiceBus"/> of this service.
            </param>
            <returns>
            <c>true</c> if <typeparamref name="TController"/> was added as a controller; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Kingo.MicroServices.Controllers.MicroProcessorCollectionExtensions.AddMicroServiceBusController(Kingo.MicroServices.Controllers.MicroProcessorComponentCollection,System.Type,System.Boolean)">
            <summary>
            Adds the specified <paramref name="type"/> as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService" /> if and only if
            <paramref name="type"/> is a <see cref="T:Kingo.MicroServices.Controllers.MicroServiceBusController" />.
            If <paramref name="isMainController"/> is <c>true</c>, the controller is also registered as
            a <see cref="T:Kingo.MicroServices.Controllers.IMicroServiceBus" />.
            </summary>
            <param name="collection">A collection of components.</param>
            <param name="type">The type to register as a controller.</param>
            <param name="isMainController">
            Indicates whether or not the specified controller is owned by the current service.
            If <c>true</c>, the specified controller <paramref name="type"/> will be registered as the <see cref="T:Kingo.MicroServices.Controllers.IMicroServiceBus"/>
            of this service.
            </param>
            <returns>
            <c>true</c> if <paramref name="type"/> was added as a controller; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> or <paramref name="type"/> is <c>null</c>.
            </exception>
        </member>
    </members>
</doc>
