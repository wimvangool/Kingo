<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Comparable_IncomparableType" xml:space="preserve">
    <value>The specified object of type '{0}' cannot be compared to instance of type '{1}'.</value>
  </data>
  <data name="Constraint_WithErrorMessageNotSupported" xml:space="preserve">
    <value>WithErrorMessage is not supported by constraint '{0}'.</value>
  </data>
  <data name="Constraint_WithNameNotSupported" xml:space="preserve">
    <value>WithName is not supported by constraint '{0}'.</value>
  </data>
  <data name="Context_IllegalScopeStarted" xml:space="preserve">
    <value>Cannot start this scope because a more restrive scope is still active.</value>
  </data>
  <data name="DomainEvent_IncompatibleMemberType" xml:space="preserve">
    <value>Member '{0}' has incorrect type '{1}'. Expected type is '{2}'.</value>
  </data>
  <data name="DomainEvent_KeyMemberNotFound" xml:space="preserve">
    <value>Could not resolve Key on event of type '{0}'. Please mark one field or property as the Key of this event.</value>
  </data>
  <data name="DomainEvent_MultipleKeyMembersFound" xml:space="preserve">
    <value>Event '{0}' contains more than one member that is decorated with KeyAttribute, where only one is allowed.</value>
  </data>
  <data name="DomainEvent_MultipleVersionMembersFound" xml:space="preserve">
    <value>Event '{0}' contains more than one member that is decorated with VersionAttribute, where only one is allowed.</value>
  </data>
  <data name="DomainEvent_VersionMemberNotFound" xml:space="preserve">
    <value>Could not resolve Version on event of type '{0}'. Please mark one field or property as the Version of this event.</value>
  </data>
  <data name="DomainModelException_CommandFailed" xml:space="preserve">
    <value>Command '{0}' failed.</value>
  </data>
  <data name="DomainModelException_EventFailed" xml:space="preserve">
    <value>An error occurred while processing event '{0}'.</value>
  </data>
  <data name="EnumIsInRangeOfValidValues_UnsupportedValue" xml:space="preserve">
    <value>Instance '{0}' of type '{1}' is not supported because it is not an Enum type.</value>
  </data>
  <data name="ErrorLevel_InvalidErrorLevel" xml:space="preserve">
    <value>ErrorLevel must be 0 or higher: {0}.</value>
  </data>
  <data name="ExpressionBuilder_ExpressionNotSupported" xml:space="preserve">
    <value>The specified node or expression is not supported inside a member expression: '{0}'.</value>
  </data>
  <data name="ExpressionExtensions_UnsupportedExpression" xml:space="preserve">
    <value>Specified expression is not supported: '{0}'.</value>
  </data>
  <data name="HasItemFilter_IndexerNotFound" xml:space="preserve">
    <value>Instance of type '{0}' does not contain an indexer with argument types '[{1}]'.</value>
  </data>
  <data name="HasItemFilter_InvalidArrayIndexValues" xml:space="preserve">
    <value>The specified values are not valid to index an array: {0}.</value>
  </data>
  <data name="Identifier_EmptyIdentifier" xml:space="preserve">
    <value>Cannot create an empty identifier.</value>
  </data>
  <data name="Identifier_InvalidIdentifier" xml:space="preserve">
    <value>Invalid identifier specified: '{0}'.</value>
  </data>
  <data name="Message_AmbiguousAttributeMatch" xml:space="preserve">
    <value>Two or more attributes declared on message '{0}' are assignable to '{1}'.</value>
  </data>
  <data name="Message_CopyNotSupported" xml:space="preserve">
    <value>Message of type '{0}' could not be copied because it is neither a DataContract nor Serializable. Mark this message with the DataContractAttribute or the SerializableAttribute, or provide a custom implementation of the Copy()-method by overridding it.</value>
  </data>
  <data name="NumberExtensions_NegativeEpsilon" xml:space="preserve">
    <value>Epsilon ({0}) cannot be negative.</value>
  </data>
  <data name="Range_InvalidRange" xml:space="preserve">
    <value>The specified range is not valid: {0}.</value>
  </data>
  <data name="ReadOnlyDictionary_KeyNotFound" xml:space="preserve">
    <value>The specified key '{0}' is not a valid index for this collection.</value>
  </data>
  <data name="Scope_CannotCompleteScope" xml:space="preserve">
    <value>Cannot complete this scope because it is not the current scope.</value>
  </data>
  <data name="Scope_IncorrectNesting" xml:space="preserve">
    <value>The scopes were not nested correctly.</value>
  </data>
  <data name="Scope_ScopeAlreadyCompleted" xml:space="preserve">
    <value>The scope has already completed.</value>
  </data>
  <data name="StringTemplateVariable_MemberNotFound" xml:space="preserve">
    <value>Instance of type '{0}' does not contain public field or property '{1}'.</value>
  </data>
  <data name="StringTemplate_MissingClosingBrace" xml:space="preserve">
    <value>Invalid format string specified: '{0}'. Missing closing brace of variable at index {1}.</value>
  </data>
  <data name="StringTemplate_MissingIdentifier" xml:space="preserve">
    <value>Invalid format string specified: '{0}'. Missing identifier at index {1}.</value>
  </data>
  <data name="StringTemplate_UnexpectedCharacter" xml:space="preserve">
    <value>Invalid format string specified: '{0}'. Unexpected character '{1}' at index {2}.</value>
  </data>
</root>